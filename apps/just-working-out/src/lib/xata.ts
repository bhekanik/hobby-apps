// Generated by Xata Codegen 0.21.0. Please do not edit.
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client';
import { buildClient } from '@xata.io/client';

export const tables = [
	{
		name: 'weight',
		columns: [
			{
				name: 'created_at',
				type: 'datetime',
				notNull: true,
				defaultValue: '2023-01-04T14:21:02.599Z'
			},
			{ name: 'weight', type: 'float', notNull: true, defaultValue: '0' },
			{ name: 'unit', type: 'string', notNull: true, defaultValue: 'kg' },
			{
				name: 'date',
				type: 'datetime',
				notNull: true,
				defaultValue: '2023-01-05T01:39:52.101Z'
			}
		]
	}
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Weight = InferredTypes['weight'];
export type WeightRecord = Weight & XataRecord;

export type DatabaseSchema = {
	weight: WeightRecord;
};

export const DatabaseClient = buildClient();

const defaultOptions = {
	databaseURL: 'https://Bhekani-Khumalo-s-workspace-sem5mg.eu-west-1.xata.sh/db/just-working-out'
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super({ ...defaultOptions, ...options }, tables);
	}
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
	if (instance) return instance;

	instance = new XataClient();
	return instance;
};
