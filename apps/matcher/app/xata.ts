// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      {
        name: "created_at",
        type: "datetime",
        notNull: true,
        defaultValue: "2022-12-15T18:22:26.899Z",
      },
      { name: "username", type: "string", unique: true },
      { name: "firstname", type: "string", notNull: true, defaultValue: "" },
      { name: "lastname", type: "string", notNull: true, defaultValue: "" },
      { name: "gender", type: "string", notNull: true, defaultValue: "male" },
      {
        name: "whatsapp_username",
        type: "string",
        notNull: true,
        defaultValue: "",
      },
      { name: "password", type: "string", notNull: true, defaultValue: "" },
    ],
  },
  {
    name: "likes",
    columns: [
      { name: "from", type: "link", link: { table: "users" } },
      { name: "to", type: "link", link: { table: "users" } },
      {
        name: "created_at",
        type: "datetime",
        notNull: true,
        defaultValue: "2022-12-15T19:17:38.917Z",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Likes = InferredTypes["likes"];
export type LikesRecord = Likes & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  likes: LikesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Bhekani-Khumalo-s-workspace-sem5mg.eu-west-1.xata.sh/db/matcher",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
