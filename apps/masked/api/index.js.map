{
  "version": 3,
  "sources": ["empty-module:~/utils/client/pwa-utils.client", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/Header/index.tsx", "../app/lib/config.ts", "../app/components/FormElements/LinkButton/index.tsx", "../app/lib/theme/colors.ts", "../app/layouts/AppLayout/index.tsx", "../app/routes/resources/manifest[.]webmanifest.ts", "../app/routes/r/$roomId/poll/results.tsx", "../app/components/ChoiceResult/index.tsx", "../app/components/FormElements/Button/index.tsx", "../app/components/RoomCodeShare/index.tsx", "../app/components/FormElements/Input/index.tsx", "../app/lib/getRoomImageUrl.ts", "../app/types/Choice.tsx", "../app/types/Poll.tsx", "../app/types/Room.tsx", "../app/xata.ts", "../app/models/choices.server..ts", "../app/models/polls.server..ts", "../app/models/rooms.server..ts", "../app/routes/m/share/$confessionId.tsx", "../app/components/ConfessionPageFooter/index.tsx", "../app/hooks/useClickOutside.tsx", "../app/lib/badRequest.tsx", "../app/lib/getConfessionImageUrl.ts", "../app/types/Comment.tsx", "../app/types/Confession.tsx", "../app/models/comments.server..ts", "../app/models/confessions.server..ts", "../app/routes/r/$roomId/poll/index.tsx", "../app/routes/m/ama/$confessionId.tsx", "../app/components/CommentsList/index.tsx", "../app/routes/r/$roomId/ama/posts.tsx", "../app/components/CardFooter/index.tsx", "../app/routes/resources/subscribe.ts", "../app/utils/server/pwa-utils.server.ts", "../app/routes/m/$confessionId.tsx", "../app/routes/r/$roomId/index.tsx", "../app/components/FormElements/Textarea/index.tsx", "../app/lib/getMainAppImageUrl.ts", "../app/routes/r/$roomId/posts.tsx", "../app/components/ConfessionCard/index.tsx", "../app/components/CommentForm/index.tsx", "../app/components/ConfessionForm/index.tsx", "../app/routes/r/share/$roomId.tsx", "../app/routes/unfurl.ts", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLocation,\n  useMatches,\n} from \"@remix-run/react\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport { AppLayout } from \"./layouts/AppLayout\";\nimport { config } from \"./lib/config\";\nimport styles from \"./styles/app.css\";\nlet isMount = true;\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"manifest\", href: \"/resources/manifest.webmanifest\" },\n    { rel: \"stylesheet\", href: styles },\n    { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    {\n      rel: \"preconnect\",\n      href: \"https://fonts.gstatic.com\",\n      crossorigin: \"true\",\n    },\n    {\n      href: \"https://fonts.googleapis.com/css2?family=Waiting+for+the+Sunrise&display=swap\",\n      rel: \"stylesheet\",\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  \"og:type\": \"website\",\n  \"og:site_name\": config.appName,\n  \"twitter:creator\": \"@bhekanik\",\n  \"twitter:card\": \"summary_large_image\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  let location = useLocation();\n  let matches = useMatches();\n\n  React.useEffect(() => {\n    let mounted = isMount;\n    isMount = false;\n    if (\"serviceWorker\" in navigator) {\n      if (navigator.serviceWorker.controller) {\n        navigator.serviceWorker.controller?.postMessage({\n          type: \"REMIX_NAVIGATION\",\n          isMount: mounted,\n          location,\n          matches,\n          manifest: window.__remixManifest,\n        });\n      } else {\n        let listener = async () => {\n          await navigator.serviceWorker.ready;\n          navigator.serviceWorker.controller?.postMessage({\n            type: \"REMIX_NAVIGATION\",\n            isMount: mounted,\n            location,\n            matches,\n            manifest: window.__remixManifest,\n          });\n        };\n        navigator.serviceWorker.addEventListener(\"controllerchange\", listener);\n        return () => {\n          navigator.serviceWorker.removeEventListener(\n            \"controllerchange\",\n            listener\n          );\n        };\n      }\n    }\n  }, [location]);\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta /> <Links />\n      </head>\n      <body>\n        <Outlet /> <ScrollRestoration /> <Scripts /> <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { config } from \"~/lib/config\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\nimport { LinkButton } from \"../FormElements/LinkButton\";\n\ninterface Props {\n  room?: SerializeDate<Room>;\n  share?: boolean;\n  home?: boolean;\n}\n\nexport default function Header({ room, share = true, home = false }: Props) {\n  return room ? (\n    <header className=\"border-b-[1px] border-gray-700 p-8 pb-2\">\n      <>\n        <div className=\"w-full relative flex items-center justify-around\">\n          {home && (\n            <LinkButton\n              color=\"secondary\"\n              to={`/`}\n              className=\"flex items-center justify-center w-[fit-content] rounded-full absolute left-0 text-lg\"\n            >\n              <AiOutlineHome />\n            </LinkButton>\n          )}\n          <h1 className=\"w-full font-black m-0 p-0 text-5xl text-center font-heading\">\n            {room.name || config.appName}\n          </h1>\n          {/* {share && room && (\n            <RoomCodeShare\n              className=\"absolute right-0\"\n              room={room}\n              withInput={false}\n            />\n          )} */}\n        </div>\n\n        {share && room && (\n          <p className=\"w-full text-center text-gray-600\">\n            Room Code: {room.id}\n          </p>\n        )}\n      </>\n    </header>\n  ) : (\n    <header className=\"border-b-[1px] border-gray-700 p-8 pb-2\">\n      <Link to=\"/\" className=\"cursor-pointer\">\n        <h1 className=\"w-full mb-4 font-black text-5xl text-center font-heading\">\n          {config.appName}\n        </h1>\n      </Link>\n    </header>\n  );\n}\n", "interface Theme {\n  backgroundColor: string;\n  foregroundColor: string;\n  appNameColor: string;\n  dimForegroundColor: string;\n  overlayIcon: string;\n  baseImage: string;\n}\n\nexport type ThemeColor = \"light\" | \"dark\";\n\ninterface Config {\n  appName: string;\n  appDescription: string;\n  theme: ThemeColor;\n  postsPath: string;\n  roomsPath: string;\n  colors: {\n    dark: Theme;\n    light: Theme;\n  };\n}\n\nexport const config: Config = {\n  appName: \"Masked\",\n  appDescription: \"Anonymous sharing with up-voting and down-voting.\",\n  theme: \"light\",\n  postsPath: \"m\",\n  roomsPath: \"r\",\n  colors: {\n    dark: {\n      backgroundColor: \"#1f2937\",\n      foregroundColor: \"#d1d5db\",\n      dimForegroundColor: \"#9CA3AF\",\n      appNameColor: \"#d1d5db\",\n      overlayIcon:\n        \"https://res.cloudinary.com/dhuzf0isy/image/upload/v1669840444/like_n8yrdz.png\",\n      baseImage: \"base-bicolor_y1xjw2\",\n    },\n    // light: {\n    //   foregroundColor: \"#1f2937\",\n    //   backgroundColor: \"#d1d5db\",\n    //   appNameColor: \"#1f2937\",\n    //   dimForegroundColor: \"#29313F\",\n    //   overlayIcon:\n    //     \"https://res.cloudinary.com/dhuzf0isy/image/upload/v1669861295/likes-dark_up5zfn.png\",\n    //   baseImage: \"base-bicolor-light_jgshbb\",\n    // },\n    light: {\n      foregroundColor: \"black\",\n      backgroundColor: \"white\",\n      dimForegroundColor: \"#5D6997\",\n      appNameColor: \"#3081E1\",\n      overlayIcon:\n        \"https://res.cloudinary.com/dhuzf0isy/image/upload/v1669861295/likes-dark_up5zfn.png\",\n      baseImage: \"base-very-light-rounded-color_iq8csz\",\n    },\n  },\n};\n", "import { Link } from \"@remix-run/react\";\nimport classnames from \"classnames\";\nimport { AnchorHTMLAttributes, forwardRef, PropsWithChildren } from \"react\";\nimport { Color, colors } from \"~/lib/theme/colors\";\n\ninterface Props {\n  color?: Color;\n  to: string;\n}\n\nexport const LinkButton = forwardRef<\n  HTMLAnchorElement,\n  PropsWithChildren<AnchorHTMLAttributes<HTMLAnchorElement> & Props>\n>(({ children, className, color = \"primary\", to, ...props }, ref) => {\n  const btnClasses = classnames(\n    `p-2 px-4 flex text-bold border-[1px] border-gray-400 text-white items-center whitespace-nowrap justify-center rounded-full`,\n    `${colors[color]}-800`,\n    `hover:${colors[color]}-500`,\n    `hover:text-green-500`,\n    className\n  );\n\n  return (\n    <Link to={to} {...props} ref={ref} className={btnClasses}>\n      {children}\n    </Link>\n  );\n});\n", "export const colors = {\n  primary: \"bg-blue\",\n  secondary: \"bg-gray\",\n  accent: \"bg-green\",\n};\n\nexport type Color = keyof typeof colors;\n", "import { PropsWithChildren } from \"react\";\n\nexport const AppLayout = ({ children }: PropsWithChildren) => {\n  return (\n    <div className=\"bg-gray-800 w-full relative text-gray-300 px-0 md:p-8 md:pt-0 pt-0 min-h-[100vh] h-full \">\n      <div className=\"flex p-0 flex-col max-w-4xl w-full mx-auto sticky top-8 bg-gray-800 border-r-[1px] border-l-[1px] border-gray-700 min-h-[100vh]\">\n        {children}\n      </div>\n    </div>\n  );\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { config } from \"~/lib/config\";\n\nexport let loader: LoaderFunction = () => {\n  return json(\n    {\n      short_name: config.appName,\n      name: config.appName,\n      start_url: \"/\",\n      display: \"standalone\",\n      background_color: \"#1f2937\",\n      theme_color: \"#d1d5db\",\n      shortcuts: [\n        {\n          name: \"Homepage\",\n          url: \"/\",\n          icons: [\n            {\n              src: \"/icons/android-icon-96x96.png\",\n              sizes: \"96x96\",\n              type: \"image/png\",\n              purpose: \"any monochrome\",\n            },\n          ],\n        },\n      ],\n      icons: [\n        {\n          src: \"/icons/android-icon-36x36.png\",\n          sizes: \"36x36\",\n          type: \"image/png\",\n          density: \"0.75\",\n        },\n        {\n          src: \"/icons/android-icon-48x48.png\",\n          sizes: \"48x48\",\n          type: \"image/png\",\n          density: \"1.0\",\n        },\n        {\n          src: \"/icons/android-icon-72x72.png\",\n          sizes: \"72x72\",\n          type: \"image/png\",\n          density: \"1.5\",\n        },\n        {\n          src: \"/icons/android-icon-96x96.png\",\n          sizes: \"96x96\",\n          type: \"image/png\",\n          density: \"2.0\",\n        },\n        {\n          src: \"/icons/android-icon-144x144.png\",\n          sizes: \"144x144\",\n          type: \"image/png\",\n          density: \"3.0\",\n        },\n        {\n          src: \"/icons/android-icon-192x192.png\",\n          sizes: \"192x192\",\n          type: \"image/png\",\n          density: \"4.0\",\n        },\n      ],\n    },\n    {\n      headers: {\n        \"Cache-Control\": \"public, max-age=600\",\n        \"Content-Type\": \"application/manifest+json\",\n      },\n    }\n  );\n};\n", "import { json, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { ChoiceResult } from \"~/components/ChoiceResult\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport Header from \"~/components/Header\";\nimport { RoomCodeShare } from \"~/components/RoomCodeShare\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getRoomImageUrl } from \"~/lib/getRoomImageUrl\";\nimport { getChoices } from \"~/models/choices.server.\";\nimport { getRoomPoll } from \"~/models/polls.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { Choice } from \"~/types/Choice\";\nimport { Poll } from \"~/types/Poll\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  poll: Poll;\n  choices: Choice[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"twitter:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"og:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.roomId);\n\n  const room = await getRoom(params.roomId);\n  const poll = await getRoomPoll(params.roomId);\n  let choices = null;\n  if (poll) {\n    choices = await getChoices(poll.id);\n  }\n\n  const url = getRoomImageUrl(room, params.theme as ThemeColor);\n\n  return json({\n    room,\n    poll,\n    url,\n    choices,\n  });\n};\n\nexport default function Index() {\n  const { room, poll, url, choices } = useLoaderData<LoaderData>();\n\n  const totalVotes = choices.reduce((acc: number, cur: Choice) => {\n    return acc + cur.votes;\n  }, 0);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} home />\n        <div className=\"flex flex-col gap-4 px-8 items-center justify-center w-full\">\n          <RoomCodeShare poll className=\"w-full\" room={room} />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div className=\"flex flex-col p-8 gap-4\">\n          <h3 className=\"text-3xl\">{poll.question}</h3>\n          <div className=\"flex flex-col gap-2 w-full justify-start items-start\">\n            {choices.map((choice: Choice) => (\n              <ChoiceResult\n                key={choice.id}\n                choice={choice}\n                totalVotes={totalVotes}\n              />\n            ))}\n          </div>\n          <Form method=\"get\">\n            <Button type=\"submit\" className=\"px-8\">\n              Get latest results\n            </Button>\n          </Form>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { useEffect, useRef } from \"react\";\nimport { Choice } from \"~/types/Choice\";\n\ninterface Props {\n  choice: Choice;\n  totalVotes: number;\n}\n\nexport const ChoiceResult = ({ choice, totalVotes }: Props) => {\n  const percentageContainerRef = useRef<HTMLDivElement>(null);\n\n  const sizeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (choice && sizeRef.current) {\n      sizeRef.current.style.width = `${(\n        (choice.votes / totalVotes) *\n        100\n      ).toFixed(0)}%`;\n    }\n  }, [choice, sizeRef]);\n\n  return (\n    <div\n      ref={percentageContainerRef}\n      key={choice.id}\n      className=\"flex flex-row justify-start items-center w-full rounded-full relative border-[1px] border-solid border-gray-500\"\n    >\n      <span className=\"px-8 w-full\">\n        {choice.description}: {choice.votes} (\n        {((choice.votes / totalVotes) * 100).toFixed(2)}%)\n      </span>\n      <div\n        ref={sizeRef}\n        className={`h-full bg-blue-500 absolute w-[${(\n          (choice.votes / totalVotes) *\n          100\n        ).toFixed(0)}%] opacity-30`}\n      />\n    </div>\n  );\n};\n", "import classnames from \"classnames\";\nimport { ButtonHTMLAttributes, forwardRef, PropsWithChildren } from \"react\";\nimport { Color, colors } from \"~/lib/theme/colors\";\n\ninterface Props {\n  color?: Color;\n  textColor?: string;\n}\n\nexport const Button = forwardRef<\n  HTMLButtonElement,\n  PropsWithChildren<ButtonHTMLAttributes<HTMLButtonElement> & Props>\n>(({ children, className, textColor, color = \"primary\", ...props }, ref) => {\n  const btnClasses = classnames(\n    `p-2 flex text-bold border-[1px] border-gray-400 justify-center rounded-full`,\n    `${colors[color]}-800`,\n    `hover:${colors[color]}-500`,\n    `hover:text-green-500`,\n    textColor ?? \"text-white\",\n    className\n  );\n\n  return (\n    <button {...props} ref={ref} className={btnClasses}>\n      {children}\n    </button>\n  );\n});\n", "import classNames from \"classnames\";\nimport { forwardRef, HTMLAttributes, useEffect, useState } from \"react\";\nimport { AiOutlineCopy, AiOutlineShareAlt } from \"react-icons/ai\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { Input } from \"~/components/FormElements/Input\";\nimport { config } from \"~/lib/config\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\nimport { WebShareLink } from \"~/utils/client/pwa-utils.client\";\n\ninterface Props {\n  room?: SerializeDate<Room>;\n  withInput?: boolean;\n  share?: boolean;\n  poll?: boolean;\n}\n\nexport const RoomCodeShare = forwardRef<\n  HTMLDivElement,\n  Props & HTMLAttributes<HTMLDivElement>\n>(({ room, withInput = true, share, poll, className, ...props }, ref) => {\n  const [copiedText, setCopiedText] = useState(\"\");\n  const [roomLink, setRoomLink] = useState(\"\");\n\n  useEffect(() => {\n    if (room && typeof window !== \"undefined\") {\n      const origin = window.location.origin;\n\n      setRoomLink(\n        `${origin}/${config.roomsPath}${share ? `/share` : \"\"}/${room.id}${\n          poll ? `/poll` : \"\"\n        }`\n      );\n    }\n  }, [room]);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(roomLink);\n    setCopiedText(\"Copied to Clipboard!\");\n    setTimeout(() => {\n      setCopiedText(\"\");\n    }, 2000);\n  };\n\n  const handleShare = async () => {\n    WebShareLink(\n      roomLink,\n      \"Room Link\",\n      \"Come join our room in the Masked app.\"\n    );\n    await navigator.share({ url: roomLink });\n  };\n\n  return (\n    <div\n      className={classNames(\n        \"flex gap-2\",\n        !className?.includes(\"absolute\") && \"relative\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    >\n      {withInput && <Input value={roomLink} disabled />}\n\n      <Button\n        onClick={handleCopy}\n        aria-label=\"copy\"\n        color=\"secondary\"\n        className=\"flex items-center justify-center text-lg\"\n      >\n        <AiOutlineCopy />\n      </Button>\n\n      <Button\n        onClick={handleShare}\n        color=\"secondary\"\n        className=\"flex items-center justify-center text-lg\"\n      >\n        <AiOutlineShareAlt />\n      </Button>\n      {copiedText && (\n        <span className=\"absolute left-[30%] top-2 bg-slate-800 border-2 text-white rounded p-1\">\n          {copiedText}\n        </span>\n      )}\n    </div>\n  );\n});\n", "import classnames from \"classnames\";\nimport { forwardRef, InputHTMLAttributes, PropsWithChildren } from \"react\";\n\nexport const Input = forwardRef<\n  HTMLInputElement,\n  PropsWithChildren<InputHTMLAttributes<HTMLInputElement>>\n>(({ children, className, color = \"primary\", ...props }, ref) => {\n  const inputClasses = classnames(\n    \"p-2 px-6 w-full bg-gray-700 rounded-full\",\n    className\n  );\n\n  return <input {...props} ref={ref} className={inputClasses} />;\n});\n", "import { SelectedPick } from \"@xata.io/client\";\nimport { v2 as cloudinary } from \"cloudinary\";\nimport { formatDistance } from \"date-fns\";\nimport { RoomsRecord } from \"~/xata\";\nimport { config, ThemeColor } from \"./config\";\n\nexport const getRoomImageUrl = (\n  room: Readonly<SelectedPick<RoomsRecord, [\"*\"]> | null>,\n  theme?: ThemeColor\n) => {\n  if (!room) return \"\";\n\n  cloudinary.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET,\n  });\n\n  const transformation = [\n    {\n      fetch_format: \"auto\",\n      quality: \"auto\",\n    },\n    {\n      overlay: {\n        url: config.colors[theme ?? config.theme].overlayIcon,\n      },\n    },\n    {\n      flags: \"layer_apply\",\n      width: 30,\n      height: 30,\n      gravity: \"north_east\",\n      x: 40,\n      y: 60,\n    },\n    {\n      color: config.colors[theme ?? config.theme].dimForegroundColor,\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 30,\n        text_align: \"right\",\n        text: `Created ${formatDistance(\n          new Date(room.created_at as unknown as string),\n          new Date()\n        )} ago`,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"south_east\", x: 40, y: 43 },\n    {\n      color: config.colors[theme ?? config.theme].appNameColor,\n      width: 1135,\n      height: 150,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Waiting for the Sunrise\",\n        font_size: 80,\n        font_weight: \"bold\",\n        text_align: \"left\",\n        text: config.appName,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_west\", x: 40, y: 40 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 1135,\n      height: 390,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 30,\n        text_align: \"left\",\n        text: config.appDescription,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_west\", x: 40, y: 140 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 950,\n      height: 50,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 40,\n        text_align: \"left\",\n        text: `Room Name: `,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_west\", x: 40, y: 215 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 850,\n      height: 250,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 60,\n        font_weight: \"bold\",\n        text_align: \"left\",\n        text: `${room?.name || \"Unnamed Room\"}`,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_west\", x: 300, y: 200 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 950,\n      height: 50,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 40,\n        text_align: \"left\",\n        text: `Room Code:`,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"south_west\", x: 40, y: 130 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 850,\n      height: 320,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 60,\n        font_weight: \"bold\",\n        text_align: \"left\",\n        text: `${room?.id}`,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"south_west\", x: 300, y: 115 },\n  ];\n\n  try {\n    const cloudinaryUrl = cloudinary.url(\n      config.colors[theme ?? config.theme].baseImage,\n      {\n        width: 1200,\n        height: 630,\n        transformation,\n      }\n    );\n\n    return cloudinaryUrl;\n  } catch (error) {\n    console.log(\"error:\", error);\n    return \"\";\n  }\n};\n", "import { z } from \"zod\";\nimport { pollSchema } from \"./Poll\";\n\nconst choiceBase = {\n  id: z.string().optional(),\n  description: z.string(),\n  votes: z.number(),\n  percentage: z.number(),\n  created_at: z.date(),\n};\n\nexport const choiceSchema = z.object({\n  ...choiceBase,\n  poll: z.string(),\n});\n\nexport const choiceWithPollSchema = z.object({\n  ...choiceBase,\n  poll: pollSchema,\n});\n\nexport type Choice = z.infer<typeof choiceSchema>;\nexport type ChoiceWithPoll = z.infer<typeof choiceWithPollSchema>;\n", "import { z } from \"zod\";\nimport { roomSchema } from \"./Room\";\n\nconst pollBase = {\n  id: z.string().optional(),\n  question: z.string(),\n  created_at: z.date(),\n};\n\nexport const pollSchema = z.object({\n  ...pollBase,\n  room: z.string(),\n});\n\nexport const pollWithRoomSchema = z.object({\n  ...pollBase,\n  room: roomSchema,\n});\n\nexport type Poll = z.infer<typeof pollSchema>;\nexport type PollWithRoom = z.infer<typeof pollWithRoomSchema>;\n", "import { z } from \"zod\";\n\nexport const roomSchema = z.object({\n  id: z.string().optional(),\n  name: z.string(),\n  secret: z.string().optional(),\n  type: z.enum([\"default\", \"ama\", \"poll\"]),\n  created_at: z.date(),\n});\n\nexport type Room = z.infer<typeof roomSchema>;\n", "// Generated by Xata Codegen 0.21.0. Please do not edit.\nimport { buildClient } from \"@xata.io/client\";\nimport type {\n  BaseClientOptions,\n  SchemaInference,\n  XataRecord,\n} from \"@xata.io/client\";\n\nconst tables = [\n  {\n    name: \"confessions\",\n    columns: [\n      { name: \"title\", type: \"string\" },\n      {\n        name: \"content\",\n        type: \"text\",\n        notNull: true,\n        defaultValue: \"cannot be empty\",\n      },\n      { name: \"created_at\", type: \"datetime\" },\n      { name: \"likes\", type: \"int\", notNull: true, defaultValue: \"0\" },\n      { name: \"room\", type: \"link\", link: { table: \"rooms\" } },\n      { name: \"views\", type: \"int\", notNull: true, defaultValue: \"0\" },\n    ],\n  },\n  {\n    name: \"rooms\",\n    columns: [\n      { name: \"created_at\", type: \"datetime\" },\n      { name: \"name\", type: \"string\" },\n      { name: \"type\", type: \"string\", notNull: true, defaultValue: \"default\" },\n      { name: \"secret\", type: \"string\" },\n    ],\n  },\n  {\n    name: \"comments\",\n    columns: [\n      {\n        name: \"content\",\n        type: \"text\",\n        notNull: true,\n        defaultValue: \"empty comment\",\n      },\n      { name: \"created_at\", type: \"datetime\" },\n      { name: \"comment_on\", type: \"link\", link: { table: \"comments\" } },\n      { name: \"post\", type: \"link\", link: { table: \"confessions\" } },\n      { name: \"poster\", type: \"string\" },\n    ],\n  },\n  {\n    name: \"polls\",\n    columns: [\n      {\n        name: \"created_at\",\n        type: \"datetime\",\n        notNull: true,\n        defaultValue: \"2022-12-30T14:36:18.78Z\",\n      },\n      { name: \"question\", type: \"string\", notNull: true, defaultValue: \"\" },\n      { name: \"room\", type: \"link\", link: { table: \"rooms\" } },\n    ],\n  },\n  {\n    name: \"choices\",\n    columns: [\n      { name: \"description\", type: \"string\", notNull: true, defaultValue: \"\" },\n      { name: \"votes\", type: \"int\", notNull: true, defaultValue: \"0\" },\n      { name: \"percentage\", type: \"float\", notNull: true, defaultValue: \"0\" },\n      { name: \"poll\", type: \"link\", link: { table: \"polls\" } },\n      {\n        name: \"created_at\",\n        type: \"datetime\",\n        notNull: true,\n        defaultValue: \"2022-12-30T14:57:13.267Z\",\n      },\n    ],\n  },\n] as const;\n\nexport type SchemaTables = typeof tables;\nexport type InferredTypes = SchemaInference<SchemaTables>;\n\nexport type Confessions = InferredTypes[\"confessions\"];\nexport type ConfessionsRecord = Confessions & XataRecord;\n\nexport type Rooms = InferredTypes[\"rooms\"];\nexport type RoomsRecord = Rooms & XataRecord;\n\nexport type Comments = InferredTypes[\"comments\"];\nexport type CommentsRecord = Comments & XataRecord;\n\nexport type Polls = InferredTypes[\"polls\"];\nexport type PollsRecord = Polls & XataRecord;\n\nexport type Choices = InferredTypes[\"choices\"];\nexport type ChoicesRecord = Choices & XataRecord;\n\nexport type DatabaseSchema = {\n  confessions: ConfessionsRecord;\n  rooms: RoomsRecord;\n  comments: CommentsRecord;\n  polls: PollsRecord;\n  choices: ChoicesRecord;\n};\n\nconst DatabaseClient = buildClient();\n\nconst defaultOptions = {\n  databaseURL:\n    \"https://Bhekani-Khumalo-s-workspace-sem5mg.eu-west-1.xata.sh/db/ccy-confessions\",\n};\n\nexport class XataClient extends DatabaseClient<DatabaseSchema> {\n  constructor(options?: BaseClientOptions) {\n    super({ ...defaultOptions, ...options }, tables);\n  }\n}\n\nlet instance: XataClient | undefined = undefined;\n\nexport const getXataClient = () => {\n  if (instance) return instance;\n\n  instance = new XataClient();\n  return instance;\n};\n", "import { Choice, choiceSchema } from \"~/types/Choice\";\nimport { getXataClient } from \"~/xata\";\n\nconst xata = getXataClient();\n\nexport const getChoice = async (choiceId: string) => {\n  return await xata.db.choices.read(choiceId);\n};\n\nexport const getAllChoices = async () => {\n  const choices = await xata.db.choices.sort(\"created_at\", \"asc\").getAll();\n\n  return choices;\n};\n\nexport const getChoices = async (pollId: string) => {\n  const choices = await xata.db.choices.sort(\"created_at\", \"desc\").getAll({\n    filter: {\n      \"poll.id\": pollId,\n    },\n  });\n\n  return choices;\n};\n\nexport const createChoice = async (description: string, pollId: string) => {\n  const choice: Choice = {\n    description,\n    poll: pollId,\n    votes: 0,\n    percentage: 0.0,\n    created_at: new Date(),\n  };\n\n  choiceSchema.parse(choice);\n\n  return await xata.db.choices.create(choice);\n};\n\nexport const voteForChoice = async (choiceId: string, votes: number) => {\n  const newVotes = votes + 1;\n  const newChoice = await xata.db.choices.update(choiceId, {\n    votes: newVotes,\n  });\n\n  return newChoice;\n};\n", "import { Poll, pollSchema } from \"~/types/Poll\";\nimport { getXataClient } from \"~/xata\";\n\nconst xata = getXataClient();\n\nexport const getPoll = async (pollId: string) => {\n  return await xata.db.polls.read(pollId);\n};\n\nexport const getPolls = async () => {\n  return await xata.db.polls.sort(\"created_at\").getPaginated({\n    pagination: {\n      size: 15,\n    },\n  });\n};\n\nexport const getRoomPoll = async (roomId: string) => {\n  const poll = await xata.db.polls.sort(\"created_at\", \"desc\").getFirst({\n    filter: {\n      \"room.id\": roomId,\n    },\n  });\n\n  return poll;\n};\n\nexport const createPoll = async (question: string, roomId: string) => {\n  const poll: Poll = {\n    question,\n    room: roomId,\n    created_at: new Date(),\n  };\n\n  pollSchema.parse(poll);\n\n  return await xata.db.polls.create(poll);\n};\n", "import { Room, roomSchema } from \"~/types/Room\";\nimport { getXataClient } from \"~/xata\";\n\nconst xata = getXataClient();\n\nexport const getRoom = async (roomId: string) => {\n  return await xata.db.rooms.read(roomId);\n};\n\nexport const getRooms = async () => {\n  return await xata.db.rooms.sort(\"created_at\", \"desc\").getPaginated({\n    pagination: {\n      size: 15,\n    },\n  });\n};\n\nexport type RoomType = Room[\"type\"];\n\nexport const createRoom = async (\n  name: string,\n  type: RoomType,\n  secret?: string\n) => {\n  const room: Room = {\n    name,\n    type,\n    created_at: new Date(),\n  };\n\n  if (secret) {\n    room.secret = secret;\n  }\n\n  roomSchema.parse(room);\n\n  return await xata.db.rooms.create(room);\n};\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { Link, useCatch, useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { formatDistance } from \"date-fns\";\nimport { FormEvent, useEffect, useRef, useState } from \"react\";\nimport ClampLines from \"react-clamp-lines\";\nimport { AiOutlineArrowLeft, AiOutlineClose } from \"react-icons/ai\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport ConfessionPageFooter from \"~/components/ConfessionPageFooter\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { LinkButton } from \"~/components/FormElements/LinkButton\";\nimport Header from \"~/components/Header\";\nimport { useClickOutside } from \"~/hooks/useClickOutside\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getConfessionImageUrl } from \"~/lib/getConfessionImageUrl\";\nimport { createComment, getComments } from \"~/models/comments.server.\";\nimport { getConfession, likeConfession } from \"~/models/confessions.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { ConfessionWithRoom } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  confession: ConfessionWithRoom;\n  comments: CommentWithPost[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: data.confession.title,\n    \"twitter:title\": data.confession.title,\n    \"og:title\": data.confession.title,\n    description: data.confession.content,\n    \"twitter:description\": data.confession.content,\n    \"og:description\": data.confession.content,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.confessionId);\n\n  const confession = await getConfession(params.confessionId);\n  const comments = await getComments(params.confessionId);\n  const room = await getRoom(confession?.room?.id ?? \"\");\n\n  const url = getConfessionImageUrl(confession!, params.theme as ThemeColor);\n\n  // if (page.hasNextPage()) {\n  //   const secondPage = await page.nextPage()\n  // }\n\n  return json({ room, confession, url, comments });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const { _action, id, likes, comment, poster } = Object.fromEntries(formData);\n\n  try {\n    if (_action === \"comment\") {\n      const result = await createComment(\n        comment as string,\n        poster as string,\n        id as string\n      );\n      return json(result);\n    }\n\n    if ((_action === \"like\" || _action === \"dislike\") && likes && id) {\n      await likeConfession(id as string, +likes, _action);\n      return null;\n    }\n    return null;\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { confession, room, comments } = useLoaderData<LoaderData>();\n\n  const [isCommenting, setIsCommenting] = useState(false);\n\n  const [commentContainerRef] = useClickOutside<HTMLDivElement>(() =>\n    setIsCommenting(false)\n  );\n\n  const onOpenComment = (open: boolean) => {\n    setIsCommenting(open);\n  };\n\n  const commentRef = useRef<HTMLDivElement>(null);\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetcher.submit(null, { method: \"get\" });\n    }, 6000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isCommenting && commentRef.current) {\n      commentRef.current.contentEditable = \"true\";\n      commentRef.current.focus();\n    }\n  }, [isCommenting]);\n\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (!fetcher.data?.formError && fetcher.data?.id) {\n      formRef.current?.reset();\n      onOpenComment(false);\n    }\n  }, [fetcher]);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const content = commentRef.current?.innerText;\n    formData.set(\"comment\", content as string);\n    formData.set(\"id\", confession.id as string);\n    formData.set(\"_action\", \"comment\");\n    fetcher.submit(formData, { method: \"post\" });\n  };\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} share={false} />\n\n        <div className=\"flex items-center justify-center\">\n          <LinkButton\n            color=\"secondary\"\n            to={`/${config.roomsPath}/share/${confession.room.id}`}\n            className=\"w-[fit-content] absolute left-4 border-none bg-none hover:bg-none\"\n          >\n            <AiOutlineArrowLeft />\n          </LinkButton>\n\n          <Link to={`/${config.postsPath}/${confession?.id}`}>\n            <h3 className=\"font-bold pb-2 pt-4 text-2xl flex-1 whitespace-nowrap text-ellipsis\">\n              {confession?.title}\n            </h3>\n          </Link>\n        </div>\n        <div className=\"mb-4 text-lg px-8\">{confession?.content}</div>\n        <ConfessionPageFooter\n          confession={confession}\n          room={room}\n          comments={comments}\n          onOpenComment={onOpenComment}\n        />\n        {isCommenting && (\n          <div\n            ref={commentContainerRef}\n            className=\"ml-8 px-4 pt-0 pl-0 pb-2 border-l-[1px] border-gray-700\"\n          >\n            <fetcher.Form\n              method=\"post\"\n              ref={formRef}\n              className=\"flex flex-col px-8 pb-2\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"flex flex-row justify-between items-center py-2 border-t-[1px] border-gray-700\">\n                <div className=\"flex items-center justify-center gap-2 text-gray-500\">\n                  <Button\n                    color=\"secondary\"\n                    onClick={() => onOpenComment(false)}\n                    className=\"hover:bg-slate-600 border-none bg-none text-lg p-2 rounded-full\"\n                  >\n                    <AiOutlineClose />\n                  </Button>\n                  <span className=\"text-gray-400\">Type your comment below</span>\n                </div>\n\n                <input type=\"hidden\" name=\"id\" value={confession.id} />\n                <input type=\"hidden\" name=\"poster\" value={\"Anonymous\"} />\n\n                <Button\n                  name=\"_action\"\n                  type=\"submit\"\n                  value=\"comment\"\n                  className=\"text-sm py-1 flex items-center justify-center\"\n                >\n                  Comment\n                </Button>\n              </div>\n\n              <div\n                ref={commentRef}\n                className=\"p-0 rounded-3xl px-6 py-6 bg-gray-700 outline-none border-t-[1px] border-gray-700\"\n              />\n            </fetcher.Form>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex flex-col pb-0 hover:drop-shadow-md h-full\">\n        <div className=\"border-gray-700\">\n          {comments.map((comment) => (\n            <div\n              key={comment.id}\n              className=\"ml-8 pl-8 border-b-[1px] border-l-[1px] border-gray-700\"\n            >\n              <div className=\"flex flex-col\">\n                <div className=\"flex flex-row gap-2 justify-between items-center py-2 pt-4\">\n                  <h3 className=\"font-bold text-sm flex-1 whitespace-nowrap text-ellipsis\">\n                    {comment.poster ?? \"Room Owner\"}\n                  </h3>\n                  <span>&middot;</span>\n                  <div className=\"w-full text-gray-400 text-sm text-left\">\n                    {`${formatDistance(\n                      new Date(comment.created_at),\n                      new Date()\n                    )}`}\n                  </div>\n                </div>\n\n                <ClampLines\n                  text={comment.content}\n                  id=\"really-unique-id\"\n                  lines={2}\n                  ellipsis=\"...\"\n                  moreText=\"(click for more)\"\n                  lessText=\"(click for less)\"\n                  innerElement=\"p\"\n                  className=\"mb-6\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { useFetcher } from \"@remix-run/react\";\nimport { formatDistance } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AiOutlineComment,\n  AiOutlineDislike,\n  AiOutlineLike,\n  AiOutlineShareAlt,\n} from \"react-icons/ai\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { config } from \"~/lib/config\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\nimport { WebShareLink } from \"~/utils/client/pwa-utils.client\";\n\ninterface Props {\n  confession: Omit<SerializeDate<Confession>, \"room\"> & {\n    room: SerializeDate<Room> | string;\n  };\n  room: SerializeDate<Room>;\n  comments: SerializeDate<\n    Omit<CommentWithPost, \"post\"> & { post: SerializeDate<Confession> }\n  >[];\n  onOpenComment: (open: boolean) => void;\n}\n\nexport default function ConfessionPageFooter({\n  confession,\n  room,\n  comments,\n  onOpenComment,\n}: Props) {\n  const fetcher = useFetcher();\n\n  const getOptimisticLikes = () => {\n    const likes = fetcher.submission?.formData.get(\"likes\")\n      ? +fetcher.submission?.formData.get(\"likes\")!\n      : 0;\n    const action = fetcher.submission?.formData.get(\"_action\");\n\n    if (likes && action === \"like\") {\n      return likes + 1;\n    } else if (likes && action === \"dislike\") {\n      return likes - 1;\n    }\n    return null;\n  };\n\n  const [confessionLInk, setConfessionLink] = useState(\"\");\n\n  useEffect(() => {\n    if (confession && typeof window !== \"undefined\") {\n      const origin = window.location.origin;\n\n      setConfessionLink(`${origin}/${config.postsPath}/${confession.id}`);\n    }\n  }, [confession]);\n\n  const handleShare = async () => {\n    WebShareLink(confessionLInk, confession.title, confession.content);\n    await navigator.share({ url: confessionLInk });\n  };\n\n  return (\n    <div className=\"flex gap-4 border-t-[1px] border-b-[1px] border-gray-700 py-2 px-8 w-full items-center justify-end\">\n      <div className=\"w-full text-gray-400 text-md text-left\">\n        {`${formatDistance(\n          new Date(confession?.created_at ?? new Date().toISOString()),\n          new Date()\n        )}`}\n      </div>\n\n      {room?.type === \"ama\" && (\n        <Button\n          color=\"secondary\"\n          onClick={() => onOpenComment(true)}\n          textColor=\"text-gray-400\"\n          className=\"border-none hover:bg-slate-600 bg-none text-lg p-2 rounded-full flex flex-row items-center justify-center gap-2\"\n        >\n          <AiOutlineComment />\n          <span className=\"text-gray-500\">{comments?.length}</span>\n        </Button>\n      )}\n\n      <fetcher.Form\n        method=\"post\"\n        className=\"flex flex-row items-center justify-between\"\n      >\n        {/* <span className=\"text-lg p-2 text-center whitespace-nowrap\">\n              {confession?.views} views\n            </span> */}\n\n        <input type=\"hidden\" name=\"id\" value={confession?.id} />\n        <input type=\"hidden\" name=\"likes\" value={confession?.likes} />\n        <fieldset className=\"flex flex-row items-center justify-between\">\n          <Button\n            type=\"submit\"\n            name=\"_action\"\n            value=\"dislike\"\n            color=\"secondary\"\n            textColor=\"text-gray-400\"\n            className=\"border-none hover:bg-slate-600 bg-none text-lg p-2 rounded-full\"\n          >\n            <AiOutlineDislike />\n          </Button>\n          <span className=\"text-lg p-2 w-10 text-center text-gray-500\">\n            {getOptimisticLikes() ?? confession.likes}\n          </span>\n          <Button\n            type=\"submit\"\n            name=\"_action\"\n            value=\"like\"\n            color=\"secondary\"\n            textColor=\"text-gray-400\"\n            className=\"border-none hover:bg-slate-600 bg-none text-lg p-2 rounded-full\"\n          >\n            <AiOutlineLike />\n          </Button>\n        </fieldset>\n      </fetcher.Form>\n      <Button\n        onClick={handleShare}\n        color=\"secondary\"\n        textColor=\"text-gray-400\"\n        className=\"border-none flex items-center justify-center text-lg\"\n      >\n        <AiOutlineShareAlt />\n      </Button>\n    </div>\n  );\n}\n", "import { RefObject, useEffect, useRef } from \"react\";\n\nexport const useClickOutside = <T extends HTMLElement>(\n  cb: () => void\n): [RefObject<T>] => {\n  const refOne = useRef<T>(null);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (!refOne.current?.contains(e.target as Node)) {\n        cb();\n      }\n    };\n    document.addEventListener(\"mousedown\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n    };\n  });\n\n  return [refOne];\n};\n", "import { json } from \"@remix-run/node\";\nimport { ActionData } from \"~/types/ActionData\";\n\nexport const badRequest = (data: ActionData) => json(data, { status: 400 });\n", "import { SelectedPick } from \"@xata.io/client\";\nimport { v2 as cloudinary } from \"cloudinary\";\nimport { format } from \"date-fns\";\nimport { ConfessionsRecord } from \"~/xata\";\nimport { config, ThemeColor } from \"./config\";\n\nexport const getConfessionImageUrl = (\n  confession: Readonly<SelectedPick<ConfessionsRecord, [\"*\"]> | null>,\n  theme?: ThemeColor\n) => {\n  if (!confession) return \"\";\n\n  cloudinary.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET,\n  });\n\n  const transformation = [\n    {\n      fetch_format: \"auto\",\n      quality: \"auto\",\n    },\n    {\n      overlay: {\n        url: config.colors[theme ?? config.theme].overlayIcon,\n      },\n    },\n    {\n      flags: \"layer_apply\",\n      width: 30,\n      height: 30,\n      gravity: \"south_west\",\n      x: 40,\n      y: 40,\n    },\n    {\n      color: config.colors[theme ?? config.theme].dimForegroundColor,\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 30,\n        text_align: \"left\",\n        text: confession.likes.toString(),\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"south_west\", x: 85, y: 43 },\n    {\n      color: config.colors[theme ?? config.theme].dimForegroundColor,\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 30,\n        text_align: \"right\",\n        text: `${format(\n          new Date(confession.created_at as unknown as string),\n          \"p - PP\"\n        )}`,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"south_east\", x: 40, y: 40 },\n    {\n      color: config.colors[theme ?? config.theme].appNameColor,\n      overlay: {\n        font_family: \"Waiting for the Sunrise\",\n        font_size: 30,\n        font_weight: \"bold\",\n        text_align: \"left\",\n        text: config.appName,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_east\", x: 40, y: 40 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 950,\n      height: 100,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 80,\n        font_weight: \"bold\",\n        text_align: \"left\",\n        text: confession.title,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_west\", x: 40, y: 35 },\n    {\n      color: config.colors[theme ?? config.theme].dimForegroundColor,\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 30,\n        text_align: \"left\",\n        text: `Room Code: ${confession.room?.id}`,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"south_west\", x: 160, y: 40 },\n    {\n      color: config.colors[theme ?? config.theme].foregroundColor,\n      width: 1135,\n      height: 410,\n      crop: \"fit\",\n      overlay: {\n        font_family: \"Open Sans\",\n        font_size: 45,\n        text_align: \"left\",\n        text: confession.content,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"north_west\", x: 40, y: 140 },\n  ];\n\n  try {\n    const cloudinaryUrl = cloudinary.url(\n      config.colors[theme ?? config.theme].baseImage,\n      {\n        width: 1200,\n        height: 630,\n        transformation,\n      }\n    );\n\n    return cloudinaryUrl;\n  } catch (error) {\n    console.log(\"error:\", error);\n    return \"\";\n  }\n};\n", "import { z } from \"zod\";\nimport { confessionSchema } from \"./Confession\";\n\nconst commentBase = {\n  id: z.string().optional(),\n  content: z.string(),\n  poster: z.string(),\n  created_at: z.date(),\n};\n\nexport const commentSchema = z.object({\n  ...commentBase,\n  comment_on: z.string().optional(),\n  post: z.string(),\n});\n\nexport const commentWithCommentSchema = z.object({\n  ...commentBase,\n  post: z.string(),\n  comment_on: commentSchema,\n});\n\nexport const commentWithPostSchema = z.object({\n  ...commentBase,\n  comment_on: z.string().optional(),\n  post: confessionSchema,\n});\n\nexport const commentWithLinksSchema = z.object({\n  ...commentBase,\n  comment_on: commentSchema,\n  post: confessionSchema,\n});\n\nexport type Comment = z.infer<typeof commentSchema>;\nexport type CommentWithComment = z.infer<typeof commentWithCommentSchema>;\nexport type CommentWithPost = z.infer<typeof commentWithPostSchema>;\nexport type CommentWithLinks = z.infer<typeof commentWithLinksSchema>;\n", "import { z } from \"zod\";\nimport { roomSchema } from \"./Room\";\n\nconst confessionsBase = {\n  id: z.string().optional(),\n  title: z.string(),\n  likes: z.number(),\n  views: z.number(),\n  content: z.string(),\n  created_at: z.date(),\n};\n\nexport const confessionSchema = z.object({\n  ...confessionsBase,\n  room: z.string(),\n});\n\nexport const confessionWithRoomSchema = z.object({\n  ...confessionsBase,\n  room: roomSchema,\n});\n\nexport type Confession = z.infer<typeof confessionSchema>;\nexport type ConfessionWithRoom = z.infer<typeof confessionWithRoomSchema>;\n", "import { commentSchema } from \"~/types/Comment\";\nimport { getXataClient } from \"~/xata\";\n\nconst xata = getXataClient();\n\nexport const getComment = async (commentId: string) => {\n  return await xata.db.comments.read(commentId);\n};\n\nexport const getAllComments = async () => {\n  const comments = await xata.db.comments.sort(\"created_at\", \"asc\").getAll();\n\n  return comments;\n};\n\nexport const getComments = async (confessionId: string) => {\n  const comments = await xata.db.comments.sort(\"created_at\", \"desc\").getAll({\n    filter: {\n      \"post.id\": confessionId,\n    },\n  });\n\n  return comments;\n};\n\nexport const createComment = async (\n  content: string,\n  poster: string,\n  confessionId: string\n) => {\n  const comment = {\n    content,\n    poster,\n    post: confessionId,\n    created_at: new Date(),\n  };\n\n  commentSchema.parse(comment);\n\n  return await xata.db.comments.create(comment);\n};\n", "import { confessionSchema } from \"~/types/Confession\";\nimport { getXataClient } from \"~/xata\";\n\nconst xata = getXataClient();\n\nexport const getConfession = async (confessionId: string) => {\n  return await xata.db.confessions.read(confessionId);\n};\n\nexport const getConfessions = async (roomId: string) => {\n  const page = await xata.db.confessions\n    .sort(\"likes\", \"desc\")\n    .sort(\"created_at\", \"desc\")\n    .getPaginated({\n      pagination: {\n        size: 15,\n      },\n      filter: {\n        \"room.id\": roomId,\n      },\n    });\n\n  return page;\n};\n\nexport const createConfession = async (data: object) => {\n  const confession = {\n    ...data,\n    likes: 0,\n    views: 0,\n    created_at: new Date(),\n  };\n\n  confessionSchema.parse(confession);\n\n  return await xata.db.confessions.create(confession);\n};\n\nexport const likeConfession = async (\n  id: string,\n  likes: number,\n  action: \"like\" | \"dislike\"\n) => {\n  const newLikes = action === \"like\" ? likes + 1 : likes - 1;\n  return await xata.db.confessions.update(id, {\n    likes: newLikes,\n  });\n};\n\nexport const addConfessionView = async (id: string, views: number) => {\n  const newViews = views + 1;\n  return await xata.db.confessions.update(id, {\n    views: newViews,\n  });\n};\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport {\n  Form,\n  useActionData,\n  useCatch,\n  useLoaderData,\n  useNavigate,\n} from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport Header from \"~/components/Header\";\nimport { RoomCodeShare } from \"~/components/RoomCodeShare\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getRoomImageUrl } from \"~/lib/getRoomImageUrl\";\nimport { getChoices, voteForChoice } from \"~/models/choices.server.\";\nimport { getRoomPoll } from \"~/models/polls.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { Choice } from \"~/types/Choice\";\nimport { Poll } from \"~/types/Poll\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  poll: Poll;\n  choices: Choice[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"twitter:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"og:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.roomId);\n\n  const room = await getRoom(params.roomId);\n  const poll = await getRoomPoll(params.roomId);\n  let choices = null;\n  if (poll) {\n    choices = await getChoices(poll.id);\n  }\n\n  const url = getRoomImageUrl(room, params.theme as ThemeColor);\n\n  return json({\n    room,\n    poll,\n    url,\n    choices,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const formData = await request.formData();\n    const { vote: choiceId, ...choiceVotes } = Object.fromEntries(formData);\n\n    const votes = choiceVotes[choiceId as string];\n\n    const choice = await voteForChoice(choiceId as string, +votes);\n\n    return json({ choice });\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { room, poll, url, choices } = useLoaderData<LoaderData>();\n\n  const actionData = useActionData();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!actionData) return;\n\n    if (actionData.choice) {\n      navigate(`/${config.roomsPath}/${room.id}/poll/results`);\n    }\n  }, [actionData]);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} home />\n        <div className=\"flex flex-col gap-4 px-8 items-center justify-center w-full\">\n          <RoomCodeShare share className=\"w-full\" room={room} />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <Form method=\"post\" className=\"flex flex-col p-8 gap-4\">\n          <h3 className=\"text-3xl\">{poll.question}</h3>\n          <div className=\"flex flex-col gap-2 w-full justify-start items-start\">\n            {choices.map((choice: Choice) => (\n              <label\n                key={choice.id}\n                className=\"flex flex-row gap-2 justify-start items-center w-full\"\n              >\n                <input type=\"hidden\" name={choice.id} value={choice.votes} />\n                <input\n                  type=\"radio\"\n                  name=\"vote\"\n                  value={choice.id}\n                  className=\"accent-gray-800\"\n                />\n                {choice.description}\n              </label>\n            ))}\n          </div>\n          <Button type=\"submit\">Submit Vote</Button>\n        </Form>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { Link, useCatch, useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { FormEvent, useEffect, useRef, useState } from \"react\";\nimport { AiOutlineArrowLeft, AiOutlineClose } from \"react-icons/ai\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport CommentsList from \"~/components/CommentsList\";\nimport ConfessionPageFooter from \"~/components/ConfessionPageFooter\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { LinkButton } from \"~/components/FormElements/LinkButton\";\nimport Header from \"~/components/Header\";\nimport { useClickOutside } from \"~/hooks/useClickOutside\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getConfessionImageUrl } from \"~/lib/getConfessionImageUrl\";\nimport { createComment, getComments } from \"~/models/comments.server.\";\nimport { getConfession, likeConfession } from \"~/models/confessions.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { ConfessionWithRoom } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  confession: ConfessionWithRoom;\n  comments: CommentWithPost[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: data.confession.title,\n    \"twitter:title\": data.confession.title,\n    \"og:title\": data.confession.title,\n    description: data.confession.content,\n    \"twitter:description\": data.confession.content,\n    \"og:description\": data.confession.content,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.confessionId);\n\n  const confession = await getConfession(params.confessionId);\n  const comments = await getComments(params.confessionId);\n  const room = await getRoom(confession?.room?.id ?? \"\");\n\n  const url = getConfessionImageUrl(confession!, params.theme as ThemeColor);\n\n  // if (page.hasNextPage()) {\n  //   const secondPage = await page.nextPage()\n  // }\n\n  return json({ room, confession, url, comments });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const { _action, id, likes, comment, poster } = Object.fromEntries(formData);\n\n  try {\n    if (_action === \"comment\") {\n      const result = await createComment(\n        comment as string,\n        poster as string,\n        id as string\n      );\n      return json(result);\n    }\n\n    if ((_action === \"like\" || _action === \"dislike\") && likes && id) {\n      await likeConfession(id as string, +likes, _action);\n      return null;\n    }\n    return null;\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { confession, room, comments } = useLoaderData<LoaderData>();\n\n  const [isCommenting, setIsCommenting] = useState(false);\n\n  const [commentContainerRef] = useClickOutside<HTMLDivElement>(() =>\n    setIsCommenting(false)\n  );\n\n  const onOpenComment = (open: boolean) => {\n    setIsCommenting(open);\n  };\n\n  const commentRef = useRef<HTMLDivElement>(null);\n\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetcher.submit(null, { method: \"get\" });\n    }, 6000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isCommenting && commentRef.current) {\n      commentRef.current.contentEditable = \"true\";\n      commentRef.current.focus();\n    }\n  }, [isCommenting]);\n\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (!fetcher.data?.formError && fetcher.data?.id) {\n      formRef.current?.reset();\n      onOpenComment(false);\n    }\n  }, [fetcher]);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const content = commentRef.current?.innerText;\n    formData.set(\"comment\", content as string);\n    formData.set(\"id\", confession.id as string);\n    formData.set(\"_action\", \"comment\");\n    fetcher.submit(formData, { method: \"post\" });\n  };\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} share={false} />\n\n        <div className=\"flex items-center justify-center\">\n          <LinkButton\n            color=\"secondary\"\n            to={`/${config.roomsPath}/${confession.room.id}/ama/posts`}\n            className=\"w-[fit-content] absolute left-4 border-none bg-none hover:bg-none\"\n          >\n            <AiOutlineArrowLeft />\n          </LinkButton>\n\n          <Link to={`/${config.postsPath}/${confession?.id}`}>\n            <h3 className=\"font-bold pb-2 pt-4 text-2xl flex-1 whitespace-nowrap text-ellipsis\">\n              {confession?.title}\n            </h3>\n          </Link>\n        </div>\n        <div className=\"mb-4 text-lg px-8\">{confession?.content}</div>\n        <ConfessionPageFooter\n          confession={confession}\n          room={room}\n          comments={comments}\n          onOpenComment={onOpenComment}\n        />\n        {isCommenting && (\n          <div\n            ref={commentContainerRef}\n            className=\"ml-8 px-4 pt-0 pl-0 pb-2 border-l-[1px] border-gray-700\"\n          >\n            <fetcher.Form\n              method=\"post\"\n              ref={formRef}\n              className=\"flex flex-col px-8 pb-2\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"flex flex-row justify-between items-center py-2 border-t-[1px] border-gray-700\">\n                <div className=\"flex items-center justify-center gap-2 text-gray-500\">\n                  <Button\n                    color=\"secondary\"\n                    onClick={() => onOpenComment(false)}\n                    className=\"hover:bg-slate-600 border-none bg-none text-lg p-2 rounded-full\"\n                  >\n                    <AiOutlineClose />\n                  </Button>\n                  <span className=\"text-gray-400\">Type your comment below</span>\n                </div>\n\n                <input type=\"hidden\" name=\"id\" value={confession.id} />\n                <input type=\"hidden\" name=\"poster\" value={\"Room Owner\"} />\n\n                <Button\n                  name=\"_action\"\n                  type=\"submit\"\n                  value=\"comment\"\n                  className=\"text-sm py-1 flex items-center justify-center\"\n                >\n                  Comment\n                </Button>\n              </div>\n\n              <div\n                ref={commentRef}\n                className=\"p-0 rounded-3xl px-6 py-6 bg-gray-700 outline-none border-t-[1px] border-gray-700\"\n              />\n            </fetcher.Form>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex flex-col pb-0 hover:drop-shadow-md h-full\">\n        <CommentsList comments={comments} />\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { formatDistance } from \"date-fns\";\nimport ClampLines from \"react-clamp-lines\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\n\ninterface Props {\n  comments: SerializeDate<\n    Omit<CommentWithPost, \"post\"> & { post: SerializeDate<Confession> }\n  >[];\n}\n\nexport default function CommentsList({ comments }: Props) {\n  return (\n    <div className=\"border-gray-700\">\n      {comments.map((comment) => (\n        <div\n          key={comment.id}\n          className=\"ml-8 pl-8 border-b-[1px] border-l-[1px] border-gray-700\"\n        >\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row gap-2 justify-between items-center py-2 pt-4\">\n              <h3 className=\"font-bold text-sm flex-1 whitespace-nowrap text-ellipsis\">\n                {comment.poster ?? \"Room Owner\"}\n              </h3>\n              <span>&middot;</span>\n              <div className=\"w-full text-gray-400 text-sm text-left\">\n                {`${formatDistance(new Date(comment.created_at), new Date())}`}\n              </div>\n            </div>\n\n            <ClampLines\n              text={comment.content}\n              id=\"really-unique-id\"\n              lines={2}\n              ellipsis=\"...\"\n              moreText=\"(click for more)\"\n              lessText=\"(click for less)\"\n              innerElement=\"p\"\n              className=\"mb-6\"\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport {\n  Form,\n  Link,\n  useActionData,\n  useCatch,\n  useLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { ChangeEvent, FormEvent, useEffect, useRef, useState } from \"react\";\nimport ClampLines from \"react-clamp-lines\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport CardFooter from \"~/components/CardFooter\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { Input } from \"~/components/FormElements/Input\";\nimport Header from \"~/components/Header\";\nimport { RoomCodeShare } from \"~/components/RoomCodeShare\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getRoomImageUrl } from \"~/lib/getRoomImageUrl\";\nimport { createComment, getAllComments } from \"~/models/comments.server.\";\nimport {\n  createConfession,\n  getConfessions,\n  likeConfession,\n} from \"~/models/confessions.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  confessions: Confession[];\n  comments: CommentWithPost[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"twitter:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"og:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n    // \"og:url\": data.url,\n    // \"twitter:url\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.roomId);\n\n  const confessionsPage = await getConfessions(params.roomId);\n  const comments = await getAllComments();\n  const room = await getRoom(params.roomId);\n\n  const url = getRoomImageUrl(room, params.theme as ThemeColor);\n\n  // if (page.hasNextPage()) {\n  //   const secondPage = await page.nextPage()\n  // }\n\n  if (room?.type === \"default\") {\n    redirect(`/${config.roomsPath}/${room.id}/posts`);\n  }\n\n  return json({\n    room,\n    confessions: confessionsPage.records,\n    url,\n    comments,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const formData = await request.formData();\n    const { title, content, _action, id, likes, roomId, comment, poster } =\n      Object.fromEntries(formData);\n\n    if (_action === \"comment\") {\n      const result = await createComment(\n        comment as string,\n        poster as string,\n        id as string\n      );\n      return json(result);\n    }\n\n    if (_action === \"create\") {\n      const result = await createConfession({\n        title,\n        content,\n        room: roomId,\n      });\n      return json(result);\n    }\n\n    if ((_action === \"like\" || _action === \"dislike\") && likes && id) {\n      await likeConfession(id as string, +likes, _action);\n      return null;\n    }\n    return null;\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { room, comments, confessions } = useLoaderData<LoaderData>();\n\n  const [secret, setSecret] = useState(\"\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setSecret(value);\n  };\n\n  const [isCommenting, setIsCommenting] = useState(false);\n\n  const [currentPost, setCurrentPost] = useState<string | null>(null);\n\n  const onOpenComment = (open: boolean, id: string) => {\n    setIsCommenting(open);\n    if (!open) {\n      setCurrentPost(null);\n    } else setCurrentPost(id);\n  };\n\n  const commentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (isCommenting && commentRef.current) {\n      commentRef.current.contentEditable = \"true\";\n      commentRef.current.focus();\n    }\n  }, [isCommenting]);\n\n  const actionData = useActionData();\n\n  useEffect(() => {\n    if (!actionData?.formError && actionData?.id && currentPost) {\n      onOpenComment(false, currentPost);\n      setCurrentPost(null);\n    }\n  }, [actionData]);\n\n  const submit = useSubmit();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      submit(null, { method: \"get\" });\n    }, 6000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>, id: string) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const content = commentRef.current?.innerText;\n    formData.set(\"comment\", content as string);\n    formData.set(\"id\", id as string);\n    formData.set(\"_action\", \"comment\");\n    submit(formData, { method: \"post\" });\n  };\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} home />\n        <div className=\"flex flex-col gap-4 px-8 items-center justify-center w-full\">\n          <RoomCodeShare share className=\"w-full\" room={room} />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        {room.type === \"ama\" && secret !== room.secret ? (\n          <div className=\"p-8\">\n            <Input\n              placeholder=\"Room Secret\"\n              onChange={handleChange}\n              required={room.type === \"ama\"}\n            />\n          </div>\n        ) : (\n          <ul className=\"flex flex-col gap-1 overflow-auto\">\n            {confessions.length === 0 && (\n              <div className=\"flex flex-col gap-4 p-8 pb-0 items-center justify-center w-full h-full\">\n                <p>No posts yet. Share the link to get the ball rolling.</p>\n              </div>\n            )}\n\n            {confessions?.map((confession) => (\n              <li\n                key={confession.id}\n                className=\"flex flex-col gap-2 hover:drop-shadow-md border-b-[1px] border-gray-700\"\n              >\n                <div className=\"flex items-center justify-between px-8 pt-4\">\n                  <Link to={`/${config.postsPath}/ama/${confession.id}`}>\n                    <h3 className=\"font-bold text-lg flex-1 whitespace-nowrap text-ellipsis\">\n                      {confession.title}\n                    </h3>\n                  </Link>\n                </div>\n\n                <Link to={`/${config.postsPath}/ama/${confession.id}`}>\n                  <ClampLines\n                    text={confession.content}\n                    id=\"really-unique-id\"\n                    lines={2}\n                    ellipsis=\"...\"\n                    moreText=\"(click for more)\"\n                    lessText=\"(click for less)\"\n                    innerElement=\"p\"\n                    className=\"px-8 pb-4\"\n                  />\n                </Link>\n\n                <CardFooter\n                  comments={comments.filter((c) => c.post.id === confession.id)}\n                  confession={confession}\n                  room={room}\n                  share={room.type === \"ama\"}\n                  onOpenComment={(open) =>\n                    onOpenComment(open, confession.id as string)\n                  }\n                />\n\n                {isCommenting && currentPost === confession.id && (\n                  <Form\n                    method=\"post\"\n                    className=\"flex flex-col px-8 pb-2\"\n                    onSubmit={(e) => handleSubmit(e, confession.id as string)}\n                  >\n                    <div className=\"flex flex-row justify-between items-center py-2 border-t-[1px] border-gray-700\">\n                      <div className=\"flex items-center justify-center gap-2 text-gray-500\">\n                        <Button\n                          color=\"secondary\"\n                          onClick={() => {\n                            onOpenComment(false, currentPost as string);\n                          }}\n                          className=\"hover:bg-slate-600 border-none bg-none text-lg p-2 rounded-full\"\n                        >\n                          <AiOutlineClose />\n                        </Button>\n                        <span className=\"text-gray-400\">\n                          Type your comment below\n                        </span>\n                      </div>\n\n                      <input type=\"hidden\" name=\"id\" value={confession.id} />\n                      <input type=\"hidden\" name=\"poster\" value={\"Room Owner\"} />\n\n                      <Button\n                        name=\"_action\"\n                        type=\"submit\"\n                        value=\"comment\"\n                        className=\"text-sm py-1 flex items-center justify-center\"\n                      >\n                        Comment\n                      </Button>\n                    </div>\n\n                    <div\n                      ref={commentRef}\n                      className=\"p-0 rounded-3xl px-6 py-6 bg-gray-700 outline-none border-t-[1px] border-gray-700\"\n                    />\n                  </Form>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { useFetcher } from \"@remix-run/react\";\nimport { formatDistance } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AiOutlineComment,\n  AiOutlineDislike,\n  AiOutlineLike,\n  AiOutlineShareAlt,\n} from \"react-icons/ai\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { config } from \"~/lib/config\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\nimport { WebShareLink } from \"~/utils/client/pwa-utils.client\";\n\ninterface Props {\n  confession: Omit<SerializeDate<Confession>, \"room\"> & {\n    room: SerializeDate<Room> | string;\n  };\n  room: SerializeDate<Room>;\n  comments: SerializeDate<\n    Omit<CommentWithPost, \"post\"> & { post: SerializeDate<Confession> }\n  >[];\n  onOpenComment: (open: boolean) => void;\n  share?: boolean;\n}\n\nexport default function CardFooter({\n  confession,\n  room,\n  comments,\n  onOpenComment,\n  share,\n}: Props) {\n  const fetcher = useFetcher();\n\n  const getOptimisticLikes = () => {\n    const likes = fetcher.submission?.formData.get(\"likes\")\n      ? +fetcher.submission?.formData.get(\"likes\")!\n      : 0;\n    const action = fetcher.submission?.formData.get(\"_action\");\n\n    if (likes && action === \"like\") {\n      return likes + 1;\n    } else if (likes && action === \"dislike\") {\n      return likes - 1;\n    }\n    return null;\n  };\n\n  const [confessionLInk, setConfessionLink] = useState(\"\");\n\n  useEffect(() => {\n    if (confession && typeof window !== \"undefined\") {\n      const origin = window.location.origin;\n\n      setConfessionLink(\n        `${origin}/${config.postsPath}${share ? `/share` : \"\"}/${confession.id}`\n      );\n    }\n  }, [confession]);\n\n  const handleShare = async () => {\n    WebShareLink(confessionLInk, confession.title, confession.content);\n    await navigator.share({ url: confessionLInk });\n  };\n\n  return (\n    <div className=\"flex gap-4 border-t-[1px] border-b-[1px] border-gray-700 py-2 px-8 w-full items-center justify-end\">\n      <div className=\"w-full text-gray-400 text-md text-left\">\n        {`${formatDistance(\n          new Date(confession?.created_at ?? new Date().toISOString()),\n          new Date()\n        )}`}\n      </div>\n\n      {room?.type === \"ama\" && (\n        <Button\n          color=\"secondary\"\n          onClick={() => onOpenComment(true)}\n          textColor=\"text-gray-400\"\n          className=\"border-none hover:bg-slate-600 bg-none text-lg p-2 rounded-full flex flex-row items-center justify-center gap-2\"\n        >\n          <AiOutlineComment />\n          <span className=\"\">{comments?.length}</span>\n        </Button>\n      )}\n\n      <fetcher.Form\n        method=\"post\"\n        className=\"flex flex-row items-center justify-between\"\n      >\n        {/* <span className=\"text-lg p-2 text-center whitespace-nowrap\">\n              {confession?.views} views\n            </span> */}\n\n        <input type=\"hidden\" name=\"id\" value={confession?.id} />\n        <input type=\"hidden\" name=\"likes\" value={confession?.likes} />\n        <fieldset className=\"flex flex-row items-center justify-between\">\n          <Button\n            type=\"submit\"\n            name=\"_action\"\n            value=\"dislike\"\n            color=\"secondary\"\n            textColor=\"text-gray-400\"\n            className=\"border-none hover:bg-slate-600 bg-none text-lg p-2 rounded-full\"\n          >\n            <AiOutlineDislike />\n          </Button>\n          <span className=\"text-lg p-2 w-10 text-center text-gray-400\">\n            {getOptimisticLikes() ?? confession.likes}\n          </span>\n          <Button\n            type=\"submit\"\n            name=\"_action\"\n            value=\"like\"\n            color=\"secondary\"\n            textColor=\"text-gray-400\"\n            className=\"border-none hover:bg-slate-600 bg-none text-lg p-2 rounded-full\"\n          >\n            <AiOutlineLike />\n          </Button>\n        </fieldset>\n      </fetcher.Form>\n      <Button\n        onClick={handleShare}\n        color=\"secondary\"\n        textColor=\"text-gray-400\"\n        className=\"border-none flex items-center justify-center text-lg\"\n      >\n        <AiOutlineShareAlt />\n      </Button>\n    </div>\n  );\n}\n", "import { PushNotification, SaveSubscription } from \"../../utils/server/pwa-utils.server\";\nimport type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\n\nconst webPush = require(\"web-push\");\n\nexport const action: ActionFunction = async ({ request }) => {\n  const data = await request.json();\n  const subscription = data.subscription;\n\n  SaveSubscription(subscription);\n\n  return { message: \"Done\" };\n};\n\nexport const loader: LoaderFunction = async () => {\n  if (!process.env.VAPID_PUBLIC_KEY || !process.env.VAPID_PRIVATE_KEY) {\n    console.log(\n      \"You must set the VAPID_PUBLIC_KEY and VAPID_PRIVATE_KEY \" +\n        \"environment variables. You can use the following ones:\",\n    );\n    console.log(webPush.generateVAPIDKeys());\n    return null;\n  }\n\n  const publicKey = process.env.VAPID_PUBLIC_KEY;\n\n  return new Response(publicKey, {\n    status: 202,\n    statusText: \"Successful Operation\",\n  });\n};\n", "const storage = require(\"node-persist\");\nconst webPush = require(\"web-push\");\n\ninterface PushObject {\n  title: string;\n  body: string;\n  icon?: string;\n  badge?: string;\n  dir?: string;\n  image?: string;\n  silent?: boolean;\n}\n\nexport async function SaveSubscription(sub: PushSubscription): Promise<void> {\n  await storage.init();\n  await storage.setItem(\"subscription\", sub);\n}\n\n/**\n * Pushes and triggers a notification to the client-side of your app straight from the server.\n *\n * @param {string} content - An object consisting of the Notification's info to be sent over the server.\n * @param {number} delay - The delay in milliseconds before the text is copied (defaults to 0)\n */\nexport async function PushNotification(content: PushObject, delay: number = 0) {\n  if (!process.env.VAPID_PUBLIC_KEY || !process.env.VAPID_PRIVATE_KEY) {\n    console.log(\n      \"You must set the VAPID_PUBLIC_KEY and VAPID_PRIVATE_KEY \" +\n        \"environment variables. You can use the following ones:\",\n    );\n    console.log(webPush.generateVAPIDKeys());\n    return;\n  }\n\n  webPush.setVapidDetails(\"https://serviceworke.rs/\", process.env.VAPID_PUBLIC_KEY, process.env.VAPID_PRIVATE_KEY);\n\n  await storage.init();\n  const subscription = await storage.getItem(\"subscription\");\n\n  setTimeout(() => {\n    webPush\n      .sendNotification(subscription, JSON.stringify(content))\n      .then(() => {\n        return new Response(\"success\", {\n          status: 200,\n        });\n      })\n      .catch((e: Error) => {\n        console.log(e);\n        return new Response(\"Failed!\", {\n          status: 500,\n        });\n      });\n  }, delay * 1000);\n}\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { Link, useCatch, useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { FormEvent, useEffect, useRef, useState } from \"react\";\nimport { AiOutlineArrowLeft, AiOutlineClose } from \"react-icons/ai\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport CommentsList from \"~/components/CommentsList\";\nimport ConfessionPageFooter from \"~/components/ConfessionPageFooter\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { LinkButton } from \"~/components/FormElements/LinkButton\";\nimport Header from \"~/components/Header\";\nimport { useClickOutside } from \"~/hooks/useClickOutside\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getConfessionImageUrl } from \"~/lib/getConfessionImageUrl\";\nimport { createComment, getComments } from \"~/models/comments.server.\";\nimport { getConfession, likeConfession } from \"~/models/confessions.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { ConfessionWithRoom } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  confession: ConfessionWithRoom;\n  comments: CommentWithPost[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: data.confession.title,\n    \"twitter:title\": data.confession.title,\n    \"og:title\": data.confession.title,\n    description: data.confession.content,\n    \"twitter:description\": data.confession.content,\n    \"og:description\": data.confession.content,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.confessionId);\n\n  const confession = await getConfession(params.confessionId);\n  const comments = await getComments(params.confessionId);\n  const room = await getRoom(confession?.room?.id ?? \"\");\n\n  const url = getConfessionImageUrl(confession!, params.theme as ThemeColor);\n\n  // if (page.hasNextPage()) {\n  //   const secondPage = await page.nextPage()\n  // }\n\n  return json({ room, confession, url, comments });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const { _action, id, likes, comment, poster } = Object.fromEntries(formData);\n\n  try {\n    if (_action === \"comment\") {\n      const result = await createComment(\n        comment as string,\n        poster as string,\n        id as string\n      );\n      return json(result);\n    }\n\n    if ((_action === \"like\" || _action === \"dislike\") && likes && id) {\n      await likeConfession(id as string, +likes, _action);\n      return null;\n    }\n    return null;\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { confession, room, comments } = useLoaderData<LoaderData>();\n\n  const [isCommenting, setIsCommenting] = useState(false);\n\n  const [commentContainerRef] = useClickOutside<HTMLDivElement>(() =>\n    setIsCommenting(false)\n  );\n\n  const onOpenComment = (open: boolean) => {\n    setIsCommenting(open);\n  };\n\n  const commentRef = useRef<HTMLDivElement>(null);\n\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetcher.submit(null, { method: \"get\" });\n    }, 6000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isCommenting && commentRef.current) {\n      commentRef.current.contentEditable = \"true\";\n      commentRef.current.focus();\n    }\n  }, [isCommenting]);\n\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (!fetcher.data?.formError && fetcher.data?.id) {\n      formRef.current?.reset();\n      onOpenComment(false);\n    }\n  }, [fetcher]);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const content = commentRef.current?.innerText;\n    formData.set(\"comment\", content as string);\n    formData.set(\"id\", confession.id as string);\n    formData.set(\"_action\", \"comment\");\n    fetcher.submit(formData, { method: \"post\" });\n  };\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} share={false} />\n\n        <div className=\"flex items-center justify-center\">\n          <LinkButton\n            color=\"secondary\"\n            to={`/${config.roomsPath}/${confession.room.id}/posts`}\n            className=\"w-[fit-content] absolute left-4 border-none bg-none hover:bg-none\"\n          >\n            <AiOutlineArrowLeft />\n          </LinkButton>\n\n          <Link to={`/${config.postsPath}/${confession?.id}`}>\n            <h3 className=\"font-bold pb-2 pt-4 text-2xl flex-1 whitespace-nowrap text-ellipsis\">\n              {confession?.title}\n            </h3>\n          </Link>\n        </div>\n        <div className=\"mb-4 text-lg px-8\">{confession?.content}</div>\n        <ConfessionPageFooter\n          confession={confession}\n          room={room}\n          comments={comments}\n          onOpenComment={onOpenComment}\n        />\n        {isCommenting && (\n          <div\n            ref={commentContainerRef}\n            className=\"ml-8 px-4 pt-0 pl-0 pb-2 border-l-[1px] border-gray-700\"\n          >\n            <fetcher.Form\n              method=\"post\"\n              ref={formRef}\n              className=\"flex flex-col px-8 pb-2\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"flex flex-row justify-between items-center py-2 border-t-[1px] border-gray-700\">\n                <div className=\"flex items-center justify-center gap-2 text-gray-500\">\n                  <Button\n                    color=\"secondary\"\n                    onClick={() => onOpenComment(false)}\n                    className=\"hover:bg-slate-600 border-none bg-none text-lg p-2 rounded-full\"\n                  >\n                    <AiOutlineClose />\n                  </Button>\n                  <span className=\"text-gray-400\">Type your comment below</span>\n                </div>\n\n                <input type=\"hidden\" name=\"id\" value={confession.id} />\n                <input type=\"hidden\" name=\"poster\" value={\"Room Owner\"} />\n\n                <Button\n                  name=\"_action\"\n                  type=\"submit\"\n                  value=\"comment\"\n                  className=\"text-sm py-1 flex items-center justify-center\"\n                >\n                  Comment\n                </Button>\n              </div>\n\n              <div\n                ref={commentRef}\n                className=\"p-0 rounded-3xl px-6 py-6 bg-gray-700 outline-none border-t-[1px] border-gray-700\"\n              />\n            </fetcher.Form>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex flex-col pb-0 hover:drop-shadow-md h-full\">\n        <CommentsList comments={comments} />\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { Form, useActionData, useCatch, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { Input } from \"~/components/FormElements/Input\";\nimport { LinkButton } from \"~/components/FormElements/LinkButton\";\nimport { Textarea } from \"~/components/FormElements/Textarea\";\nimport Header from \"~/components/Header\";\nimport { RoomCodeShare } from \"~/components/RoomCodeShare\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getMainAppImageUrl } from \"~/lib/getMainAppImageUrl\";\nimport { createChoice } from \"~/models/choices.server.\";\nimport { createPoll } from \"~/models/polls.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { Poll } from \"~/types/Poll\";\n\ninterface ActionData {\n  poll: Poll;\n  choices: Choice[];\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const { question, roomId, ...choices } = Object.fromEntries(formData);\n\n  try {\n    const poll = await createPoll(question as string, roomId as string);\n\n    const choicePromises: Promise<any>[] = [];\n    Object.values(choices).forEach((choice) => {\n      choicePromises.push(createChoice(choice as string, poll.id));\n    });\n\n    const newChoices = await Promise.all(choicePromises);\n\n    return json({ poll, choices: newChoices });\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: config.appName,\n    \"twitter:title\": config.appName,\n    \"og:title\": config.appName,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data?.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data?.url,\n    \"twitter:image\": data?.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.roomId);\n\n  const room = await getRoom(params.roomId);\n\n  const url = getMainAppImageUrl(params.theme as ThemeColor);\n\n  return json({\n    room,\n    url,\n  });\n};\n\ninterface Choice {\n  name: string;\n  required: boolean;\n  placeholder: string;\n}\n\nexport default function Index() {\n  const { room } = useLoaderData();\n  const [choiceCounter, setChoiceCounter] = useState(2);\n\n  const [choices, setChoices] = useState<Choice[]>([\n    {\n      name: \"choice_1\",\n      required: true,\n      placeholder: \"Choice 1\",\n    },\n    {\n      name: \"choice_2\",\n      required: true,\n      placeholder: \"Choice 2\",\n    },\n  ]);\n\n  const handleAddChoice = () => {\n    setChoices((currentChoices) => [\n      ...currentChoices,\n      {\n        name: `choice_${choiceCounter + 1}`,\n        required: true,\n        placeholder: `Choice ${choiceCounter + 1}`,\n      },\n    ]);\n    setChoiceCounter((currentChoiceCounter) => currentChoiceCounter + 1);\n  };\n\n  const handleRemoveChoice = (index: number) => {\n    setChoices((currentChoices) =>\n      currentChoices.filter((_, idx) => idx !== index)\n    );\n  };\n\n  const [pollCreated, setPollCreated] = useState(false);\n\n  const actionData = useActionData<ActionData>();\n\n  useEffect(() => {\n    if (!actionData) return;\n    if (actionData.poll && actionData.choices) {\n      setPollCreated(true);\n    }\n  }, [actionData]);\n\n  return (\n    <AppLayout>\n      <Header room={room} home />\n      <div className=\"w-full flex flex-col gap-2 px-8\">\n        {room.type !== \"poll\" && (\n          <>\n            <p className=\"w-full text-center mb-2\">\n              Your Room Link. Use this link to access your room.{\" \"}\n              {room.type === \"ama\" ? (\n                <span>You will need your secret to see the posts.</span>\n              ) : (\n                <span>\n                  Share this with anyone you want to invite to the room.\n                </span>\n              )}\n            </p>\n\n            <RoomCodeShare room={room} />\n          </>\n        )}\n\n        {room.type === \"poll\" && pollCreated && (\n          <>\n            <p className=\"w-full text-center mb-2\">\n              Your Room Link. Use this link to access your room.{\" \"}\n              <span>\n                Share this with anyone you want to invite to the room.\n              </span>\n            </p>\n\n            <RoomCodeShare poll room={room} />\n          </>\n        )}\n\n        {room.type === \"ama\" && (\n          <div className=\"py-4\">\n            <p className=\"w-full text-center mb-4\">\n              Your share Link. This is used to add posts to your room.\n            </p>\n            <RoomCodeShare room={room} share />\n          </div>\n        )}\n\n        {room.type === \"ama\" && (\n          <LinkButton\n            to={`/${config.roomsPath}/${room.id}/ama/posts`}\n            color=\"accent\"\n          >\n            Enter Room{room.name && `: ${room.name}`}\n          </LinkButton>\n        )}\n\n        {room.type === \"default\" && (\n          <LinkButton\n            to={`/${config.roomsPath}/${room.id}/posts`}\n            color=\"accent\"\n          >\n            Enter Room{room.name && `: ${room.name}`}\n          </LinkButton>\n        )}\n\n        {room.type === \"poll\" && !pollCreated && (\n          <Form method=\"post\" className=\"my-4\">\n            <fieldset className=\"flex gap-2 flex-col\">\n              <Input type=\"hidden\" name=\"roomId\" value={room.id} />\n              <Textarea\n                rows={3}\n                name=\"question\"\n                required\n                className=\"w-full p-2 bg-gray-700\"\n                placeholder=\"Ask a question.\"\n              />\n\n              <fieldset className=\"flex flex-col gap-2\">\n                {choices.map((choice: Choice, index: number) => (\n                  <fieldset key={choice.name} className=\"flex gap-2 flex-1\">\n                    <Input\n                      name={choice.name}\n                      required={choice.required}\n                      placeholder={choice.placeholder}\n                    />\n                    {index > 1 && (\n                      <Button\n                        className=\"flex items-center flex-1\"\n                        onClick={() => handleRemoveChoice(index)}\n                      >\n                        \u2A09\n                      </Button>\n                    )}\n                  </fieldset>\n                ))}\n                <Button className=\"flex items-center\" onClick={handleAddChoice}>\n                  +\n                </Button>\n              </fieldset>\n\n              <Button type=\"submit\">\"Submit\"</Button>\n            </fieldset>\n          </Form>\n        )}\n\n        {room.type === \"poll\" && pollCreated && (\n          <LinkButton\n            to={`/${config.roomsPath}/${room.id}/poll`}\n            color=\"accent\"\n          >\n            Open Poll{room.name && `: ${room.name}`}\n          </LinkButton>\n        )}\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import classnames from \"classnames\";\nimport { motion, MotionProps } from \"framer-motion\";\nimport { forwardRef, PropsWithChildren, TextareaHTMLAttributes } from \"react\";\n\ninterface Props {\n  onClickAway?: () => void;\n}\n\nexport const Textarea = forwardRef<\n  HTMLTextAreaElement,\n  PropsWithChildren<\n    TextareaHTMLAttributes<HTMLTextAreaElement> & MotionProps & Props\n  >\n>(\n  (\n    { children, className, color = \"primary\", onClickAway, rows, ...props },\n    ref\n  ) => {\n    const inputClasses = classnames(\n      \"p-4 w-full bg-gray-700 rounded-3xl overflow-auto\",\n      className,\n      !className?.includes(\"px-\") && \"px-6\"\n    );\n\n    return (\n      <motion.textarea\n        key={rows}\n        {...props}\n        rows={rows}\n        initial={false}\n        animate={{ height: \"auto\" }}\n        ref={ref}\n        className={inputClasses}\n      />\n    );\n  }\n);\n", "import { v2 as cloudinary } from \"cloudinary\";\nimport { config, ThemeColor } from \"./config\";\n\nexport const getMainAppImageUrl = (theme?: ThemeColor) => {\n  cloudinary.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET,\n  });\n\n  const transformation = [\n    {\n      fetch_format: \"auto\",\n      quality: \"auto\",\n    },\n    {\n      color: config.colors[theme ?? config.theme].appNameColor,\n      overlay: {\n        font_family: \"Waiting for the Sunrise\",\n        font_size: 200,\n        font_weight: \"bold\",\n        text_align: \"left\",\n        text: config.appName,\n      },\n    },\n    { flags: \"layer_apply\", gravity: \"center\" },\n  ];\n\n  try {\n    const cloudinaryUrl = cloudinary.url(\n      config.colors[theme ?? config.theme].baseImage,\n      {\n        width: 1200,\n        height: 630,\n        transformation,\n      }\n    );\n\n    return cloudinaryUrl;\n  } catch (error) {\n    console.log(\"error:\", error);\n    return \"\";\n  }\n};\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport { useCatch, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport ConfessionCard from \"~/components/ConfessionCard\";\nimport { ConfessionForm } from \"~/components/ConfessionForm\";\nimport Header from \"~/components/Header\";\nimport { RoomCodeShare } from \"~/components/RoomCodeShare\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getRoomImageUrl } from \"~/lib/getRoomImageUrl\";\nimport { createComment, getAllComments } from \"~/models/comments.server.\";\nimport {\n  createConfession,\n  getConfessions,\n  likeConfession,\n} from \"~/models/confessions.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  confessions: Confession[];\n  comments: CommentWithPost[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"twitter:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"og:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n    // \"og:url\": data.url,\n    // \"twitter:url\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  try {\n    invariant(params.roomId);\n\n    const confessionsPage = await getConfessions(params.roomId);\n    const comments = await getAllComments();\n    const room = await getRoom(params.roomId);\n\n    const url = getRoomImageUrl(room, params.theme as ThemeColor);\n\n    if (room?.type === \"ama\") {\n      redirect(`/${config.roomsPath}/${room.id}/ama/posts`);\n    }\n\n    if (room?.type === \"poll\") {\n      redirect(`/${config.roomsPath}/${room.id}/poll`);\n    }\n\n    return json({\n      room,\n      confessions: confessionsPage.records,\n      url,\n      comments,\n    });\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const formData = await request.formData();\n    const { title, content, _action, id, likes, roomId, comment, poster } =\n      Object.fromEntries(formData);\n\n    if (_action === \"comment\") {\n      const result = await createComment(\n        comment as string,\n        poster as string,\n        id as string\n      );\n      return json(result);\n    }\n\n    if (_action === \"create\") {\n      const result = await createConfession({\n        title,\n        content,\n        room: roomId,\n      });\n      return json(result);\n    }\n\n    if ((_action === \"like\" || _action === \"dislike\") && likes && id) {\n      await likeConfession(id as string, +likes, _action);\n      return null;\n    }\n    return null;\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { room, comments, confessions } = useLoaderData<LoaderData>();\n\n  const submit = useSubmit();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      submit(null, { method: \"get\" });\n    }, 6000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} home />\n        <div className=\"flex flex-col gap-4 px-8 items-center justify-center w-full\">\n          <RoomCodeShare className=\"w-full\" room={room} />\n        </div>\n        <ConfessionForm room={room} />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        {confessions.length === 0 && (\n          <div className=\"flex flex-col gap-4 p-8 pb-0 items-center justify-center w-full h-full\">\n            <p>No posts yet. Share the room link to get the ball rolling.</p>\n          </div>\n        )}\n\n        <ul className=\"flex flex-col gap-1 overflow-auto\">\n          {confessions?.map((confession) => (\n            <ConfessionCard\n              key={confession.id}\n              confession={confession}\n              room={room}\n              comments={comments.filter((c) => c.post.id === confession.id)}\n            />\n          ))}\n        </ul>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport ClampLines from \"react-clamp-lines\";\nimport { useClickOutside } from \"~/hooks/useClickOutside\";\nimport { config } from \"~/lib/config\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\nimport CardFooter from \"../CardFooter\";\nimport { CommentForm } from \"../CommentForm\";\n\ninterface Props {\n  confession: SerializeDate<Confession>;\n  room: SerializeDate<Room>;\n  comments: SerializeDate<\n    Omit<CommentWithPost, \"post\"> & { post: SerializeDate<Confession> }\n  >[];\n}\n\nexport default function ConfessionCard({ confession, room, comments }: Props) {\n  const [isCommenting, setIsCommenting] = useState(false);\n\n  const onOpenComment = (open: boolean) => {\n    setIsCommenting(open);\n  };\n\n  const [fieldSetRef] = useClickOutside<HTMLLIElement>(() =>\n    onOpenComment(false)\n  );\n\n  return (\n    <li\n      ref={fieldSetRef}\n      key={confession.id}\n      className=\"flex flex-col gap-2 hover:drop-shadow-md border-b-[1px] border-gray-700\"\n    >\n      <div className=\"flex items-center justify-between px-8 pt-4\">\n        <Link to={`/${config.postsPath}/${confession.id}`}>\n          <h3 className=\"font-bold text-lg flex-1 whitespace-nowrap text-ellipsis\">\n            {confession.title}\n          </h3>\n        </Link>\n      </div>\n\n      <Link to={`/${config.postsPath}/${confession.id}`}>\n        <ClampLines\n          text={confession.content}\n          id=\"really-unique-id\"\n          lines={2}\n          ellipsis=\"...\"\n          moreText=\"(click for more)\"\n          lessText=\"(click for less)\"\n          innerElement=\"p\"\n          className=\"px-8 pb-4\"\n        />\n      </Link>\n\n      <CardFooter\n        comments={comments}\n        confession={confession}\n        room={room}\n        share={room.type === \"ama\"}\n        onOpenComment={onOpenComment}\n      />\n\n      {isCommenting && (\n        <CommentForm confession={confession} onOpenComment={onOpenComment} />\n      )}\n    </li>\n  );\n}\n", "import { useFetcher } from \"@remix-run/react\";\nimport { FormEvent, useEffect, useRef } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { ConfessionWithRoom } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\n\ninterface Props {\n  confession: Omit<SerializeDate<ConfessionWithRoom>, \"room\"> & {\n    room: SerializeDate<Room> | string;\n  };\n  onOpenComment: (open: boolean) => void;\n  share?: boolean;\n}\n\nexport const CommentForm = ({ confession, onOpenComment, share }: Props) => {\n  const commentRef = useRef<HTMLDivElement>(null);\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    if (commentRef.current) {\n      commentRef.current.contentEditable = \"true\";\n      commentRef.current.focus();\n    }\n  }, []);\n\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (!fetcher.data?.formError && fetcher.data?.id) {\n      formRef.current?.reset();\n      onOpenComment(false);\n    }\n  }, [fetcher]);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const content = commentRef.current?.innerText;\n    formData.set(\"comment\", content as string);\n    formData.set(\"id\", confession.id as string);\n    formData.set(\"_action\", \"comment\");\n    fetcher.submit(formData, { method: \"post\" });\n  };\n\n  return (\n    <fetcher.Form\n      method=\"post\"\n      ref={formRef}\n      className=\"flex flex-col px-8 pb-2\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"flex flex-row justify-between items-center py-2 border-t-[1px] border-gray-700\">\n        <div className=\"flex items-center justify-center gap-2 text-gray-500\">\n          <Button\n            color=\"secondary\"\n            onClick={() => onOpenComment(false)}\n            className=\"hover:bg-slate-600 border-none bg-none text-lg p-2 rounded-full\"\n          >\n            <AiOutlineClose />\n          </Button>\n          <span className=\"text-gray-400\">Type your comment below</span>\n        </div>\n\n        <input type=\"hidden\" name=\"id\" value={confession.id} />\n        <input\n          type=\"hidden\"\n          name=\"poster\"\n          value={share ? \"Anonymous\" : \"Room Owner\"}\n        />\n\n        <Button\n          name=\"_action\"\n          type=\"submit\"\n          value=\"comment\"\n          className=\"text-sm py-1 flex items-center justify-center\"\n        >\n          Comment\n        </Button>\n      </div>\n\n      <div\n        ref={commentRef}\n        className=\"p-0 rounded-3xl px-6 py-6 bg-gray-700 outline-none border-t-[1px] border-gray-700\"\n      />\n    </fetcher.Form>\n  );\n};\n", "import { useFetcher, useNavigate } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useClickOutside } from \"~/hooks/useClickOutside\";\nimport { config } from \"~/lib/config\";\nimport { Room } from \"~/types/Room\";\nimport { SerializeDate } from \"~/types/SerializeDate\";\nimport { Button } from \"../FormElements/Button\";\nimport { Input } from \"../FormElements/Input\";\nimport { Textarea } from \"../FormElements/Textarea\";\n\ninterface Props {\n  room: SerializeDate<Room>;\n}\n\nexport const ConfessionForm = ({ room }: Props) => {\n  const fetcher = useFetcher();\n\n  const formRef = useRef<HTMLFormElement>(null);\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!fetcher.data?.formError && fetcher.data?.id) {\n      formRef.current?.reset();\n      titleRef.current?.focus();\n    }\n  }, [fetcher]);\n\n  const isAdding =\n    fetcher.state === \"submitting\" &&\n    fetcher.submission.formData.get(\"_action\") === \"create\";\n\n  const handleFocus = () => {\n    setRows(6);\n  };\n\n  const [rows, setRows] = useState(2);\n\n  const [fieldSetRef] = useClickOutside<HTMLFieldSetElement>(() => setRows(2));\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (room.type === \"ama\" && fetcher.data?.id) {\n      navigate(`/${config.postsPath}/share/${fetcher.data.id}`);\n    }\n  }, [room, fetcher.data]);\n\n  return (\n    <fetcher.Form\n      ref={formRef}\n      method=\"post\"\n      className=\"flex gap-2 flex-col mb-4 px-8\"\n    >\n      <fieldset\n        ref={fieldSetRef}\n        className=\"flex gap-2 flex-col\"\n        disabled={isAdding}\n      >\n        <Input type=\"hidden\" name=\"roomId\" value={room.id} />\n        <Input ref={titleRef} name=\"title\" required placeholder=\"Post Title\" />\n        <Textarea\n          rows={rows}\n          onFocus={handleFocus}\n          name=\"content\"\n          required\n          className=\"w-full p-2 bg-gray-700\"\n          placeholder=\"Type your post here.\"\n        />\n        <Button type=\"submit\" name=\"_action\" value=\"create\" disabled={isAdding}>\n          {isAdding ? \"Submitting...\" : \"Submit\"}\n        </Button>\n      </fieldset>\n    </fetcher.Form>\n  );\n};\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { ZodError } from \"zod\";\nimport { ConfessionForm } from \"~/components/ConfessionForm\";\nimport Header from \"~/components/Header\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getRoomImageUrl } from \"~/lib/getRoomImageUrl\";\nimport { createComment, getAllComments } from \"~/models/comments.server.\";\nimport {\n  createConfession,\n  getConfessions,\n  likeConfession,\n} from \"~/models/confessions.server.\";\nimport { getRoom } from \"~/models/rooms.server.\";\nimport { CommentWithPost } from \"~/types/Comment\";\nimport { Confession } from \"~/types/Confession\";\nimport { Room } from \"~/types/Room\";\n\ninterface LoaderData {\n  room: Room;\n  confessions: Confession[];\n  comments: CommentWithPost[];\n  url: string;\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"twitter:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    \"og:title\": `${config.appName} - Room Name: ${\n      data.room?.name || \"Unnamed Room\"\n    }`,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data.url,\n    \"twitter:image\": data.url,\n    // \"og:url\": data.url,\n    // \"twitter:url\": data.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.roomId);\n\n  const confessionsPage = await getConfessions(params.roomId);\n  const comments = await getAllComments();\n  const room = await getRoom(params.roomId);\n\n  const url = getRoomImageUrl(room, params.theme as ThemeColor);\n\n  // if (page.hasNextPage()) {\n  //   const secondPage = await page.nextPage()\n  // }\n\n  if (confessionsPage.records) {\n    return json({\n      room,\n      confessions: confessionsPage.records,\n      url,\n      comments,\n    });\n  }\n\n  return json({\n    room,\n    url,\n    comments,\n    confessions: [\n      {\n        id: \"1\",\n        title: \"Test\",\n        content: \"Test content\",\n        created_at: new Date().toISOString(),\n      },\n    ],\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const formData = await request.formData();\n    const { title, content, _action, id, likes, roomId, comment, poster } =\n      Object.fromEntries(formData);\n\n    if (_action === \"comment\") {\n      const result = await createComment(\n        comment as string,\n        poster as string,\n        id as string\n      );\n      return json(result);\n    }\n\n    if (_action === \"create\") {\n      const result = await createConfession({\n        title,\n        content,\n        room: roomId,\n      });\n      return json(result);\n    }\n\n    if ((_action === \"like\" || _action === \"dislike\") && likes && id) {\n      await likeConfession(id as string, +likes, _action);\n      return null;\n    }\n    return null;\n  } catch (error) {\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport default function Index() {\n  const { room } = useLoaderData<LoaderData>();\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header room={room} home />\n        <ConfessionForm room={room} />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\"></div>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { json, LoaderFunction } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  try {\n    const requestUrl = new URL(request.url);\n    const url = requestUrl.searchParams.get(\"url\");\n\n    const res = await fetch(url as string);\n    const data = await res.text();\n\n    const imageMetaTag = data.match(\n      /<meta[^>]+property=['\"]og:image['\"][^>]+>/\n    );\n    const descriptionMetaTag = data.match(\n      /<meta[^>]+property=['\"]og:description['\"][^>]+>/\n    );\n\n    const image = imageMetaTag?.[0]\n      .match(/content=['\"]([^'\"]+)['\"]/)?.[0]\n      .match(/['\"]([^'\"]+)['\"]/)?.[0]\n      .replace(/['\"]/g, \"\");\n    const description = descriptionMetaTag?.[0]\n      .match(/content=['\"]([^'\"]+)['\"]/)?.[0]\n      .match(/['\"]([^'\"]+)['\"]/)?.[0]\n      .replace(/['\"]/g, \"\");\n\n    return json({ image, description });\n  } catch (error) {\n    console.log(\"unfurl error:\", error);\n    return json({ fetchError: error });\n  }\n};\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { Form, useActionData, useCatch, useNavigate } from \"@remix-run/react\";\nimport { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { ZodError } from \"zod\";\nimport { Button } from \"~/components/FormElements/Button\";\nimport { Input } from \"~/components/FormElements/Input\";\nimport { LinkButton } from \"~/components/FormElements/LinkButton\";\nimport Header from \"~/components/Header\";\nimport { AppLayout } from \"~/layouts/AppLayout\";\nimport { badRequest } from \"~/lib/badRequest\";\nimport { config, ThemeColor } from \"~/lib/config\";\nimport { getMainAppImageUrl } from \"~/lib/getMainAppImageUrl\";\nimport { createRoom, RoomType } from \"~/models/rooms.server.\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const { name, _action, type, secret } = Object.fromEntries(formData);\n\n  try {\n    if (_action === \"create\") {\n      const result = await createRoom((name as string) ?? \"\", type as RoomType);\n      return json(result);\n    }\n    if (_action === \"create_ama\") {\n      const result = await createRoom(\n        (name as string) ?? \"\",\n        type as RoomType,\n        secret as string\n      );\n      return json(result);\n    }\n    if (_action === \"create_poll\") {\n      const result = await createRoom(\n        (name as string) ?? \"\",\n        \"poll\",\n        secret as string\n      );\n      return json(result);\n    }\n  } catch (error) {\n    console.log(\"error:\", error);\n    return badRequest({\n      formError: (error as ZodError).message ?? `Required values are missing.`,\n    });\n  }\n};\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: config.appName,\n    \"twitter:title\": config.appName,\n    \"og:title\": config.appName,\n    description: config.appDescription,\n    \"twitter:description\": config.appDescription,\n    \"og:description\": config.appDescription,\n    \"og:image\": data?.url,\n    \"og:image:width\": \"1200\",\n    \"og:image:height\": \"630\",\n    \"og:image:secure_url\": data?.url,\n    \"twitter:image\": data?.url,\n  };\n};\n\nexport const loader: LoaderFunction = async ({ params, ...rest }) => {\n  const url = getMainAppImageUrl(params.theme as ThemeColor);\n\n  return json({ url });\n};\n\nexport default function Index() {\n  const formRef = useRef<HTMLFormElement>(null);\n  const nameRef = useRef<HTMLInputElement>(null);\n\n  const room = useActionData();\n\n  const [roomCode, setRoomCode] = useState(\"\");\n\n  const [roomType, setRoomType] = useState<RoomType>(\"default\");\n\n  const handleRoomTypeChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setRoomType(value as RoomType);\n  };\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (room?.id) {\n      navigate(`/${config.roomsPath}/${room.id}`);\n    }\n  }, [room]);\n\n  return (\n    <AppLayout>\n      <Header />\n      <Form\n        ref={formRef}\n        method=\"post\"\n        className=\"flex gap-4 flex-col mb-4 px-8\"\n      >\n        <p className=\"mb-4\">{config.appDescription}</p>\n        <span className=\"text-bold\">Already have a room code?</span>\n        <div className=\"flex gap-2\">\n          <Input\n            value={roomCode}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setRoomCode(e.target.value)\n            }\n            placeholder=\"Enter Room Code\"\n          />\n\n          <LinkButton\n            to={`/${config.roomsPath}/${roomCode}/posts`}\n            aria-label=\"copy\"\n            className=\"text-lg\"\n          >\n            Join Room\n          </LinkButton>\n        </div>\n        <p>Or create a new room. You have two options here.</p>\n        <p>\n          A default room allows anyone with the room link to make posts and\n          everyone with the room link can see all posts made.\n        </p>\n        <p>\n          For an AMA room only the creator of the room (or anyone with the room\n          secret) can see all posts and can make comments on them. Everyone else\n          can only make posts and view their own posts and comments made on\n          them.\n        </p>\n        <div className=\"w-full flex flex-row gap-2 justify-center items-center\">\n          <Input name=\"name\" ref={nameRef} placeholder=\"Room Name (Optional)\" />\n\n          <div className=\"flex flex-row gap-2 justify-center items-center\">\n            <label className=\"flex flex-row gap-2 justify-center items-center\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"default\"\n                defaultChecked\n                onChange={handleRoomTypeChange}\n                className=\"accent-gray-800\"\n              />\n              Default\n            </label>\n            <label className=\"flex flex-row gap-2 justify-center items-center\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"ama\"\n                onChange={handleRoomTypeChange}\n                className=\"accent-gray-800\"\n              />\n              AMA\n            </label>\n          </div>\n        </div>\n        {roomType === \"ama\" && (\n          <div>\n            <span>AMA rooms need a secret.</span>\n            <Input\n              name=\"secret\"\n              placeholder=\"Create a Room Secret\"\n              required={roomType === \"ama\"}\n            />\n          </div>\n        )}\n        <Button\n          type=\"submit\"\n          name=\"_action\"\n          value={roomType === \"ama\" ? \"create_ama\" : \"create\"}\n        >\n          {roomType === \"ama\" ? \"Create New AMA Room\" : \"Create New Room\"}\n        </Button>\n        <p>Or create a poll</p>\n        <Button type=\"submit\" name=\"_action\" value=\"create_poll\">\n          Create Poll\n        </Button>\n      </Form>\n    </AppLayout>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <AppLayout>\n      <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n        <Header home />\n      </div>\n      <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n        <div>An unexpected error occurred: {error.message}</div>;\n      </div>\n    </AppLayout>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <AppLayout>\n        <div className=\"flex flex-col max-w-4xl gap-4 w-full mx-auto sticky top-0 bg-gray-800 z-20 border-b-[1px] border-gray-700\">\n          <Header home />\n        </div>\n        <div className=\"flex flex-col gap-4 w-full max-w-4xl mx-auto z-10\">\n          <div>Not found</div>\n        </div>\n      </AppLayout>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "export default {'version':'0d23d4c8','entry':{'module':'/build/entry.client-YKI6SLPQ.js','imports':['/build/_shared/chunk-OM7ZPQIF.js','/build/_shared/chunk-4IYZMDEG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-25EQCPMN.js','imports':['/build/_shared/chunk-ZGGQVCLX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4V2Y6EBR.js','imports':['/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/m/$confessionId':{'id':'routes/m/$confessionId','parentId':'root','path':'m/:confessionId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/m/$confessionId-IDOCMD6U.js','imports':['/build/_shared/chunk-7ZCIDOMY.js','/build/_shared/chunk-RD76E4VD.js','/build/_shared/chunk-7ZBRTRIO.js','/build/_shared/chunk-CQC5JSM3.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/m/ama/$confessionId':{'id':'routes/m/ama/$confessionId','parentId':'root','path':'m/ama/:confessionId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/m/ama/$confessionId-DFDGPLAU.js','imports':['/build/_shared/chunk-7ZCIDOMY.js','/build/_shared/chunk-RD76E4VD.js','/build/_shared/chunk-7ZBRTRIO.js','/build/_shared/chunk-CQC5JSM3.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/m/share/$confessionId':{'id':'routes/m/share/$confessionId','parentId':'root','path':'m/share/:confessionId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/m/share/$confessionId-RHECQKLU.js','imports':['/build/_shared/chunk-RD76E4VD.js','/build/_shared/chunk-7ZBRTRIO.js','/build/_shared/chunk-CQC5JSM3.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/r/$roomId/ama/posts':{'id':'routes/r/$roomId/ama/posts','parentId':'root','path':'r/:roomId/ama/posts','index':undefined,'caseSensitive':undefined,'module':'/build/routes/r/$roomId/ama/posts-YNFJ2NTW.js','imports':['/build/_shared/chunk-2XKOFP6O.js','/build/_shared/chunk-7FZW42PI.js','/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-CQC5JSM3.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/r/$roomId/index':{'id':'routes/r/$roomId/index','parentId':'root','path':'r/:roomId','index':true,'caseSensitive':undefined,'module':'/build/routes/r/$roomId/index-JXNWV7C3.js','imports':['/build/_shared/chunk-CCV5YUQ3.js','/build/_shared/chunk-7FZW42PI.js','/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/r/$roomId/poll/index':{'id':'routes/r/$roomId/poll/index','parentId':'root','path':'r/:roomId/poll','index':true,'caseSensitive':undefined,'module':'/build/routes/r/$roomId/poll/index-2B7HH4ER.js','imports':['/build/_shared/chunk-7FZW42PI.js','/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/r/$roomId/poll/results':{'id':'routes/r/$roomId/poll/results','parentId':'root','path':'r/:roomId/poll/results','index':undefined,'caseSensitive':undefined,'module':'/build/routes/r/$roomId/poll/results-OLLY6LFI.js','imports':['/build/_shared/chunk-7FZW42PI.js','/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/r/$roomId/posts':{'id':'routes/r/$roomId/posts','parentId':'root','path':'r/:roomId/posts','index':undefined,'caseSensitive':undefined,'module':'/build/routes/r/$roomId/posts-DG4XHG5N.js','imports':['/build/_shared/chunk-GYZ4W2IH.js','/build/_shared/chunk-CCV5YUQ3.js','/build/_shared/chunk-7ZBRTRIO.js','/build/_shared/chunk-2XKOFP6O.js','/build/_shared/chunk-7FZW42PI.js','/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-CQC5JSM3.js','/build/_shared/chunk-CK3I5HOJ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/r/share/$roomId':{'id':'routes/r/share/$roomId','parentId':'root','path':'r/share/:roomId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/r/share/$roomId-NXE3RYWV.js','imports':['/build/_shared/chunk-GYZ4W2IH.js','/build/_shared/chunk-CCV5YUQ3.js','/build/_shared/chunk-7ZBRTRIO.js','/build/_shared/chunk-WJVYUHU5.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-PIHZOJLG.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/resources/manifest[.]webmanifest':{'id':'routes/resources/manifest[.]webmanifest','parentId':'root','path':'resources/manifest.webmanifest','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources/manifest[.]webmanifest-FSITSSPI.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources/subscribe':{'id':'routes/resources/subscribe','parentId':'root','path':'resources/subscribe','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources/subscribe-7EVCH6UB.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/unfurl':{'id':'routes/unfurl','parentId':'root','path':'unfurl','index':undefined,'caseSensitive':undefined,'module':'/build/routes/unfurl-TNLOVCWX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-0D23D4C8.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/resources/manifest[.]webmanifest.ts\";\nimport * as route2 from \"./routes/r/$roomId/poll/results.tsx\";\nimport * as route3 from \"./routes/m/share/$confessionId.tsx\";\nimport * as route4 from \"./routes/r/$roomId/poll/index.tsx\";\nimport * as route5 from \"./routes/m/ama/$confessionId.tsx\";\nimport * as route6 from \"./routes/r/$roomId/ama/posts.tsx\";\nimport * as route7 from \"./routes/resources/subscribe.ts\";\nimport * as route8 from \"./routes/m/$confessionId.tsx\";\nimport * as route9 from \"./routes/r/$roomId/index.tsx\";\nimport * as route10 from \"./routes/r/$roomId/posts.tsx\";\nimport * as route11 from \"./routes/r/share/$roomId.tsx\";\nimport * as route12 from \"./routes/unfurl.ts\";\nimport * as route13 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/resources/manifest[.]webmanifest\": {\n      id: \"routes/resources/manifest[.]webmanifest\",\n      parentId: \"root\",\n      path: \"resources/manifest.webmanifest\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/r/$roomId/poll/results\": {\n      id: \"routes/r/$roomId/poll/results\",\n      parentId: \"root\",\n      path: \"r/:roomId/poll/results\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/m/share/$confessionId\": {\n      id: \"routes/m/share/$confessionId\",\n      parentId: \"root\",\n      path: \"m/share/:confessionId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/r/$roomId/poll/index\": {\n      id: \"routes/r/$roomId/poll/index\",\n      parentId: \"root\",\n      path: \"r/:roomId/poll\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/m/ama/$confessionId\": {\n      id: \"routes/m/ama/$confessionId\",\n      parentId: \"root\",\n      path: \"m/ama/:confessionId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/r/$roomId/ama/posts\": {\n      id: \"routes/r/$roomId/ama/posts\",\n      parentId: \"root\",\n      path: \"r/:roomId/ama/posts\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/resources/subscribe\": {\n      id: \"routes/resources/subscribe\",\n      parentId: \"root\",\n      path: \"resources/subscribe\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/m/$confessionId\": {\n      id: \"routes/m/$confessionId\",\n      parentId: \"root\",\n      path: \"m/:confessionId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/r/$roomId/index\": {\n      id: \"routes/r/$roomId/index\",\n      parentId: \"root\",\n      path: \"r/:roomId\",\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/r/$roomId/posts\": {\n      id: \"routes/r/$roomId/posts\",\n      parentId: \"root\",\n      path: \"r/:roomId/posts\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/r/share/$roomId\": {\n      id: \"routes/r/share/$roomId\",\n      parentId: \"root\",\n      path: \"r/share/:roomId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/unfurl\": {\n      id: \"routes/unfurl\",\n      parentId: \"root\",\n      path: \"unfurl\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };"],
  "mappings": "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",
  "names": ["module", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "classnames", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "_a", "CatchBoundary", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_classnames", "import_react", "import_jsx_dev_runtime", "classnames", "import_classnames", "import_react", "import_ai", "import_classnames", "import_react", "import_jsx_dev_runtime", "classnames", "import_jsx_dev_runtime", "classNames", "cloudinary", "import_zod", "import_zod", "xata", "xata", "xata", "xata", "import_jsx_dev_runtime", "meta", "loader", "invariant", "CatchBoundary", "CatchBoundary", "ErrorBoundary", "Index", "loader", "meta", "import_node", "import_react", "import_date_fns", "import_ai", "import_tiny_invariant", "import_react", "import_date_fns", "import_ai", "import_pwa_utils", "import_jsx_dev_runtime", "action", "import_react", "import_node", "import_cloudinary", "import_date_fns", "cloudinary", "import_zod", "import_zod", "xata", "xata", "xata", "action", "import_jsx_dev_runtime", "meta", "loader", "invariant", "Index", "ClampLines", "ErrorBoundary", "CatchBoundary", "CatchBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "meta", "loader", "invariant", "action", "Index", "CatchBoundary", "confessionId_exports", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_ai", "import_tiny_invariant", "import_date_fns", "import_react_clamp_lines", "import_jsx_dev_runtime", "ClampLines", "import_jsx_dev_runtime", "meta", "loader", "invariant", "action", "Index", "ErrorBoundary", "CatchBoundary", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_react_clamp_lines", "import_ai", "import_tiny_invariant", "import_react", "import_date_fns", "import_ai", "import_pwa_utils", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "meta", "loader", "invariant", "action", "Index", "ClampLines", "ErrorBoundary", "CatchBoundary", "action", "loader", "webPush", "action", "loader", "confessionId_exports", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_ai", "import_tiny_invariant", "import_jsx_dev_runtime", "meta", "loader", "invariant", "action", "Index", "ErrorBoundary", "CatchBoundary", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_classnames", "import_react", "import_jsx_dev_runtime", "classnames", "import_cloudinary", "cloudinary", "import_jsx_dev_runtime", "action", "meta", "loader", "invariant", "Index", "ErrorBoundary", "CatchBoundary", "posts_exports", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_react", "import_react_clamp_lines", "import_react", "import_ai", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "ClampLines", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "meta", "loader", "invariant", "action", "Index", "ErrorBoundary", "CatchBoundary", "roomId_exports", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "meta", "loader", "invariant", "action", "Index", "ErrorBoundary", "CatchBoundary", "loader", "import_node", "CatchBoundary", "ErrorBoundary", "action", "Index", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "action", "meta", "loader", "Index", "ErrorBoundary", "CatchBoundary", "confessionId_exports", "posts_exports", "roomId_exports"]
}
